{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonch\\\\OneDrive\\\\Desktop\\\\deseosdedos\\\\src\\\\components\\\\Collaborate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { database, auth } from '../services/firebase';\nimport { ref, push, set, onValue, get, update, remove } from 'firebase/database';\nimport IOSAlert from './IOSAlert';\nimport { FaEye, FaSignOutAlt } from 'react-icons/fa';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Collaborate = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [invitations, setInvitations] = useState([]);\n  const [sharedLists, setSharedLists] = useState([]);\n  const [hasWishList, setHasWishList] = useState(false);\n  const [alertConfig, setAlertConfig] = useState({\n    isOpen: false,\n    title: '',\n    message: '',\n    onConfirm: null\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      // Verificar si el usuario tiene una lista de deseos\n      const userRef = ref(database, `users/${currentUser.uid}/wishlist`);\n      get(userRef).then(snapshot => {\n        setHasWishList(snapshot.exists() && snapshot.val() !== null);\n      });\n\n      // Obtener invitaciones y listas compartidas\n      const sharedListsRef = ref(database, 'sharedLists');\n      onValue(sharedListsRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          const invitationList = [];\n          const sharedListArray = [];\n          Object.entries(data).forEach(([key, value]) => {\n            if (value.invitedEmail === currentUser.email && !value.accepted) {\n              invitationList.push({\n                id: key,\n                ...value\n              });\n            } else if (value.owners.includes(currentUser.uid) || value.invitedEmail === currentUser.email && value.accepted) {\n              sharedListArray.push({\n                id: key,\n                ...value\n              });\n            }\n          });\n          setInvitations(invitationList);\n\n          // Obtener nombres de usuarios\n          Promise.all(sharedListArray.map(async list => {\n            const ownerNames = await Promise.all(list.owners.map(async uid => {\n              try {\n                const userSnapshot = await get(ref(database, `users/${uid}`));\n                const userData = userSnapshot.val();\n                return userData && userData.displayName ? userData.displayName : userData && userData.email ? userData.email : uid;\n              } catch (error) {\n                console.error(`Error al obtener el nombre del usuario ${uid}:`, error);\n                return uid;\n              }\n            }));\n            return {\n              ...list,\n              ownerNames\n            };\n          })).then(updatedSharedLists => {\n            setSharedLists(updatedSharedLists);\n          });\n        } else {\n          setInvitations([]);\n          setSharedLists([]);\n        }\n      });\n    }\n  }, []);\n  const showAlert = (title, message, onConfirm) => {\n    setAlertConfig({\n      isOpen: true,\n      title,\n      message,\n      onConfirm\n    });\n  };\n  const closeAlert = () => {\n    setAlertConfig({\n      ...alertConfig,\n      isOpen: false\n    });\n  };\n  const inviteCollaborator = () => {\n    showAlert(\"Enviar invitación\", `¿Estás seguro que quieres invitar a ${email}?`, async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        try {\n          const userRef = ref(database, `users/${currentUser.uid}/events`);\n          let userEvents = await get(userRef);\n          const newListRef = push(ref(database, 'sharedLists'));\n          await set(newListRef, {\n            owners: [currentUser.uid],\n            invitedEmail: email,\n            senderEmail: currentUser.email,\n            accepted: false,\n            events: {\n              [currentUser.uid]: userEvents.val() || {}\n            }\n          });\n          alert('Invitación enviada a ' + email);\n          setEmail('');\n        } catch (error) {\n          console.error('Error al enviar invitación:', error);\n          alert('Error al enviar la invitación. Por favor, intenta de nuevo.');\n        }\n      } else {\n        alert('Debes estar autenticado para enviar invitaciones.');\n      }\n      closeAlert();\n    });\n  };\n  const acceptInvitation = invitationId => {\n    showAlert(\"Aceptar invitación\", \"¿Estás seguro que quieres aceptar esta invitación?\", async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        try {\n          const invitationRef = ref(database, `sharedLists/${invitationId}`);\n          const snapshot = await get(invitationRef);\n          const invitationData = snapshot.val();\n          if (invitationData && invitationData.invitedEmail === currentUser.email) {\n            const userEventsRef = ref(database, `users/${currentUser.uid}/events`);\n            const userEventsSnapshot = await get(userEventsRef);\n            const currentUserEvents = userEventsSnapshot.val() || {};\n            const updateData = {\n              accepted: true,\n              owners: [...invitationData.owners, currentUser.uid]\n            };\n            Object.keys(currentUserEvents).forEach(eventId => {\n              updateData[`events/${currentUser.uid}/${eventId}`] = currentUserEvents[eventId];\n            });\n            await update(invitationRef, updateData);\n            alert('Invitación aceptada');\n          } else {\n            throw new Error('No tienes permiso para aceptar esta invitación');\n          }\n        } catch (error) {\n          console.error('Error al aceptar la invitación:', error);\n          alert('Error al aceptar la invitación. Por favor, intenta de nuevo.');\n        }\n      }\n      closeAlert();\n    });\n  };\n  const declineInvitation = invitationId => {\n    showAlert(\"Declinar invitación\", \"¿Estás seguro que quieres declinar esta invitación?\", async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        try {\n          const invitationRef = ref(database, `sharedLists/${invitationId}`);\n          const snapshot = await get(invitationRef);\n          const invitationData = snapshot.val();\n          if (invitationData && invitationData.invitedEmail === currentUser.email) {\n            await remove(invitationRef);\n            alert('Invitación declinada');\n          } else {\n            throw new Error('No tienes permiso para declinar esta invitación');\n          }\n        } catch (error) {\n          console.error('Error al declinar la invitación:', error);\n          alert('Error al declinar la invitación. Por favor, intenta de nuevo.');\n        }\n      }\n      closeAlert();\n    });\n  };\n  const leaveSharedList = listId => {\n    showAlert(\"Salir de la lista compartida\", \"¿Estás seguro que quieres salir de esta lista compartida?\", async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        try {\n          const listRef = ref(database, `sharedLists/${listId}`);\n          const snapshot = await get(listRef);\n          const listData = snapshot.val();\n          if (!listData) {\n            throw new Error('La lista compartida no existe');\n          }\n          const isOwner = listData.owners.includes(currentUser.uid);\n          const isInvitee = listData.invitedEmail === currentUser.email;\n          if (!isOwner && !isInvitee) {\n            throw new Error('No tienes permiso para salir de esta lista compartida');\n          }\n          if (isOwner) {\n            // Si es propietario, eliminar de la lista de propietarios\n            const updatedOwners = listData.owners.filter(uid => uid !== currentUser.uid);\n            if (updatedOwners.length > 0) {\n              await update(listRef, {\n                owners: updatedOwners\n              });\n            } else {\n              // Si no quedan propietarios, eliminar la lista compartida\n              await remove(listRef);\n              return; // Salimos de la función si la lista se elimina\n            }\n          }\n\n          // Eliminar los eventos del usuario de la lista compartida\n          if (listData.events && listData.events[currentUser.uid]) {\n            await remove(ref(database, `sharedLists/${listId}/events/${currentUser.uid}`));\n          }\n\n          // Si el usuario es el invitado, eliminar la invitación completamente\n          if (isInvitee) {\n            await remove(listRef);\n          }\n          alert('Has salido de la lista compartida');\n        } catch (error) {\n          console.error('Error al salir de la lista compartida:', error);\n          alert(`Error al salir de la lista compartida: ${error.message}`);\n        }\n      } else {\n        alert('Debes estar autenticado para salir de una lista compartida.');\n      }\n      closeAlert();\n    });\n  };\n  const handleViewList = listId => {\n    navigate(`/wishlist/${listId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"Colaborar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invite-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email del colaborador\",\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inviteCollaborator,\n        className: \"button\",\n        children: \"Enviar Invitaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invitations-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Invitaciones pendientes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), invitations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-invitations\",\n        children: \"No hay invitaciones pendientes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"invitation-list\",\n        children: invitations.map(invitation => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"invitation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Invitaci\\xF3n recibida de: \", invitation.senderEmail]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invitation-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => acceptInvitation(invitation.id),\n              className: \"button accept-button\",\n              children: \"Aceptar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => declineInvitation(invitation.id),\n              className: \"button decline-button\",\n              children: \"Declinar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 33\n          }, this)]\n        }, invitation.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shared-lists-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Listas compartidas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), sharedLists.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-shared-lists\",\n        children: \"No hay listas compartidas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"shared-list\",\n        children: sharedLists.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"shared-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shared-list-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"shared-list-title\",\n              children: \"Lista compartida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"shared-list-collaborators\",\n              children: [\"Colaboradores: \", list.ownerNames ? list.ownerNames.filter(name => name !== auth.currentUser.displayName).join(', ') : 'Cargando...']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shared-list-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button view-list-button\",\n              onClick: () => handleViewList(list.id),\n              children: /*#__PURE__*/_jsxDEV(FaEye, {\n                className: \"button-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button leave-list-button\",\n              onClick: () => leaveSharedList(list.id),\n              children: /*#__PURE__*/_jsxDEV(FaSignOutAlt, {\n                className: \"button-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 33\n          }, this)]\n        }, list.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IOSAlert, {\n      isOpen: alertConfig.isOpen,\n      onClose: closeAlert,\n      onConfirm: alertConfig.onConfirm,\n      title: alertConfig.title,\n      message: alertConfig.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n};\n_s(Collaborate, \"h2KAmKTsfSiRXgRcgOvHt7BzHJo=\", false, function () {\n  return [useNavigate];\n});\n_c = Collaborate;\nexport default Collaborate;\nvar _c;\n$RefreshReg$(_c, \"Collaborate\");","map":{"version":3,"names":["React","useState","useEffect","database","auth","ref","push","set","onValue","get","update","remove","IOSAlert","FaEye","FaSignOutAlt","useNavigate","jsxDEV","_jsxDEV","Collaborate","_s","email","setEmail","invitations","setInvitations","sharedLists","setSharedLists","hasWishList","setHasWishList","alertConfig","setAlertConfig","isOpen","title","message","onConfirm","navigate","currentUser","userRef","uid","then","snapshot","exists","val","sharedListsRef","data","invitationList","sharedListArray","Object","entries","forEach","key","value","invitedEmail","accepted","id","owners","includes","Promise","all","map","list","ownerNames","userSnapshot","userData","displayName","error","console","updatedSharedLists","showAlert","closeAlert","inviteCollaborator","userEvents","newListRef","senderEmail","events","alert","acceptInvitation","invitationId","invitationRef","invitationData","userEventsRef","userEventsSnapshot","currentUserEvents","updateData","keys","eventId","Error","declineInvitation","leaveSharedList","listId","listRef","listData","isOwner","isInvitee","updatedOwners","filter","length","handleViewList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","invitation","name","join","onClose","_c","$RefreshReg$"],"sources":["C:/Users/gonch/OneDrive/Desktop/deseosdedos/src/components/Collaborate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { database, auth } from '../services/firebase';\r\nimport { ref, push, set, onValue, get, update, remove } from 'firebase/database';\r\nimport IOSAlert from './IOSAlert';\r\nimport { FaEye, FaSignOutAlt } from 'react-icons/fa';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Collaborate = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [invitations, setInvitations] = useState([]);\r\n    const [sharedLists, setSharedLists] = useState([]);\r\n    const [hasWishList, setHasWishList] = useState(false);\r\n    const [alertConfig, setAlertConfig] = useState({ isOpen: false, title: '', message: '', onConfirm: null });\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            // Verificar si el usuario tiene una lista de deseos\r\n            const userRef = ref(database, `users/${currentUser.uid}/wishlist`);\r\n            get(userRef).then((snapshot) => {\r\n                setHasWishList(snapshot.exists() && snapshot.val() !== null);\r\n            });\r\n\r\n            // Obtener invitaciones y listas compartidas\r\n            const sharedListsRef = ref(database, 'sharedLists');\r\n            onValue(sharedListsRef, (snapshot) => {\r\n                const data = snapshot.val();\r\n                if (data) {\r\n                    const invitationList = [];\r\n                    const sharedListArray = [];\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        if (value.invitedEmail === currentUser.email && !value.accepted) {\r\n                            invitationList.push({ id: key, ...value });\r\n                        } else if (value.owners.includes(currentUser.uid) || (value.invitedEmail === currentUser.email && value.accepted)) {\r\n                            sharedListArray.push({ id: key, ...value });\r\n                        }\r\n                    });\r\n                    setInvitations(invitationList);\r\n\r\n                    // Obtener nombres de usuarios\r\n                    Promise.all(sharedListArray.map(async list => {\r\n                        const ownerNames = await Promise.all(list.owners.map(async uid => {\r\n                            try {\r\n                                const userSnapshot = await get(ref(database, `users/${uid}`));\r\n                                const userData = userSnapshot.val();\r\n                                return userData && userData.displayName ? userData.displayName : (userData && userData.email ? userData.email : uid);\r\n                            } catch (error) {\r\n                                console.error(`Error al obtener el nombre del usuario ${uid}:`, error);\r\n                                return uid;\r\n                            }\r\n                        }));\r\n                        return { ...list, ownerNames };\r\n                    })).then(updatedSharedLists => {\r\n                        setSharedLists(updatedSharedLists);\r\n                    });\r\n                } else {\r\n                    setInvitations([]);\r\n                    setSharedLists([]);\r\n                }\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const showAlert = (title, message, onConfirm) => {\r\n        setAlertConfig({ isOpen: true, title, message, onConfirm });\r\n    };\r\n\r\n    const closeAlert = () => {\r\n        setAlertConfig({ ...alertConfig, isOpen: false });\r\n    };\r\n\r\n    const inviteCollaborator = () => {\r\n        showAlert(\r\n            \"Enviar invitación\",\r\n            `¿Estás seguro que quieres invitar a ${email}?`,\r\n            async () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    try {\r\n                        const userRef = ref(database, `users/${currentUser.uid}/events`);\r\n                        let userEvents = await get(userRef);\r\n                        \r\n                        const newListRef = push(ref(database, 'sharedLists'));\r\n                        await set(newListRef, {\r\n                            owners: [currentUser.uid],\r\n                            invitedEmail: email,\r\n                            senderEmail: currentUser.email,\r\n                            accepted: false,\r\n                            events: {\r\n                                [currentUser.uid]: userEvents.val() || {}\r\n                            }\r\n                        });\r\n                        alert('Invitación enviada a ' + email);\r\n                        setEmail('');\r\n                    } catch (error) {\r\n                        console.error('Error al enviar invitación:', error);\r\n                        alert('Error al enviar la invitación. Por favor, intenta de nuevo.');\r\n                    }\r\n                } else {\r\n                    alert('Debes estar autenticado para enviar invitaciones.');\r\n                }\r\n                closeAlert();\r\n            }\r\n        );\r\n    };\r\n\r\n    const acceptInvitation = (invitationId) => {\r\n        showAlert(\r\n            \"Aceptar invitación\",\r\n            \"¿Estás seguro que quieres aceptar esta invitación?\",\r\n            async () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    try {\r\n                        const invitationRef = ref(database, `sharedLists/${invitationId}`);\r\n                        const snapshot = await get(invitationRef);\r\n                        const invitationData = snapshot.val();\r\n                        if (invitationData && invitationData.invitedEmail === currentUser.email) {\r\n                            const userEventsRef = ref(database, `users/${currentUser.uid}/events`);\r\n                            const userEventsSnapshot = await get(userEventsRef);\r\n                            const currentUserEvents = userEventsSnapshot.val() || {};\r\n\r\n                            const updateData = {\r\n                                accepted: true,\r\n                                owners: [...invitationData.owners, currentUser.uid]\r\n                            };\r\n\r\n                            Object.keys(currentUserEvents).forEach(eventId => {\r\n                                updateData[`events/${currentUser.uid}/${eventId}`] = currentUserEvents[eventId];\r\n                            });\r\n\r\n                            await update(invitationRef, updateData);\r\n                            alert('Invitación aceptada');\r\n                        } else {\r\n                            throw new Error('No tienes permiso para aceptar esta invitación');\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error al aceptar la invitación:', error);\r\n                        alert('Error al aceptar la invitación. Por favor, intenta de nuevo.');\r\n                    }\r\n                }\r\n                closeAlert();\r\n            }\r\n        );\r\n    };\r\n\r\n    const declineInvitation = (invitationId) => {\r\n        showAlert(\r\n            \"Declinar invitación\",\r\n            \"¿Estás seguro que quieres declinar esta invitación?\",\r\n            async () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    try {\r\n                        const invitationRef = ref(database, `sharedLists/${invitationId}`);\r\n                        const snapshot = await get(invitationRef);\r\n                        const invitationData = snapshot.val();\r\n                        if (invitationData && invitationData.invitedEmail === currentUser.email) {\r\n                            await remove(invitationRef);\r\n                            alert('Invitación declinada');\r\n                        } else {\r\n                            throw new Error('No tienes permiso para declinar esta invitación');\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error al declinar la invitación:', error);\r\n                        alert('Error al declinar la invitación. Por favor, intenta de nuevo.');\r\n                    }\r\n                }\r\n                closeAlert();\r\n            }\r\n        );\r\n    };\r\n\r\n\r\n    const leaveSharedList = (listId) => {\r\n        showAlert(\r\n            \"Salir de la lista compartida\",\r\n            \"¿Estás seguro que quieres salir de esta lista compartida?\",\r\n            async () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    try {\r\n                        const listRef = ref(database, `sharedLists/${listId}`);\r\n                        const snapshot = await get(listRef);\r\n                        const listData = snapshot.val();\r\n    \r\n                        if (!listData) {\r\n                            throw new Error('La lista compartida no existe');\r\n                        }\r\n    \r\n                        const isOwner = listData.owners.includes(currentUser.uid);\r\n                        const isInvitee = listData.invitedEmail === currentUser.email;\r\n    \r\n                        if (!isOwner && !isInvitee) {\r\n                            throw new Error('No tienes permiso para salir de esta lista compartida');\r\n                        }\r\n    \r\n                        if (isOwner) {\r\n                            // Si es propietario, eliminar de la lista de propietarios\r\n                            const updatedOwners = listData.owners.filter(uid => uid !== currentUser.uid);\r\n                            \r\n                            if (updatedOwners.length > 0) {\r\n                                await update(listRef, { owners: updatedOwners });\r\n                            } else {\r\n                                // Si no quedan propietarios, eliminar la lista compartida\r\n                                await remove(listRef);\r\n                                return; // Salimos de la función si la lista se elimina\r\n                            }\r\n                        }\r\n    \r\n                        // Eliminar los eventos del usuario de la lista compartida\r\n                        if (listData.events && listData.events[currentUser.uid]) {\r\n                            await remove(ref(database, `sharedLists/${listId}/events/${currentUser.uid}`));\r\n                        }\r\n    \r\n                        // Si el usuario es el invitado, eliminar la invitación completamente\r\n                        if (isInvitee) {\r\n                            await remove(listRef);\r\n                        }\r\n                        \r\n                        alert('Has salido de la lista compartida');\r\n                    } catch (error) {\r\n                        console.error('Error al salir de la lista compartida:', error);\r\n                        alert(`Error al salir de la lista compartida: ${error.message}`);\r\n                    }\r\n                } else {\r\n                    alert('Debes estar autenticado para salir de una lista compartida.');\r\n                }\r\n                closeAlert();\r\n            }\r\n        );\r\n    };\r\n\r\n    const handleViewList = (listId) => {\r\n        navigate(`/wishlist/${listId}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h2 className=\"page-title\">Colaborar</h2>\r\n            \r\n            {/* Formulario de invitación */}\r\n            <div className=\"invite-form\">\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email del colaborador\"\r\n                    className=\"input\"\r\n                />\r\n                <button onClick={inviteCollaborator} className=\"button\">\r\n                    Enviar Invitación\r\n                </button>\r\n            </div>\r\n\r\n            {/* Sección de invitaciones pendientes */}\r\n            <div className=\"invitations-section\">\r\n                <h3 className=\"section-title\">Invitaciones pendientes:</h3>\r\n                {invitations.length === 0 ? (\r\n                    <p className=\"no-invitations\">No hay invitaciones pendientes.</p>\r\n                ) : (\r\n                    <ul className=\"invitation-list\">\r\n                        {invitations.map((invitation) => (\r\n                            <li key={invitation.id} className=\"invitation-item\">\r\n                                <span>Invitación recibida de: {invitation.senderEmail}</span>\r\n                                <div className=\"invitation-actions\">\r\n                                    <button onClick={() => acceptInvitation(invitation.id)} className=\"button accept-button\">\r\n                                        Aceptar\r\n                                    </button>\r\n                                    <button onClick={() => declineInvitation(invitation.id)} className=\"button decline-button\">\r\n                                        Declinar\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n\r\n            {/* Sección de listas compartidas */}\r\n            <div className=\"shared-lists-section\">\r\n                <h3 className=\"section-title\">Listas compartidas:</h3>\r\n                {sharedLists.length === 0 ? (\r\n                <p className=\"no-shared-lists\">No hay listas compartidas.</p>\r\n                ) : (\r\n                    <ul className=\"shared-list\">\r\n                        {sharedLists.map((list) => (\r\n                            <li key={list.id} className=\"shared-list-item\">\r\n                                <div className=\"shared-list-info\">\r\n                                    <span className=\"shared-list-title\">Lista compartida</span>\r\n                                    <span className=\"shared-list-collaborators\">\r\n                                        Colaboradores: {list.ownerNames ? list.ownerNames.filter(name => name !== auth.currentUser.displayName).join(', ') : 'Cargando...'}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"shared-list-actions\">\r\n                                    <button className=\"action-button view-list-button\" onClick={() => handleViewList(list.id)}>\r\n                                        <FaEye className=\"button-icon\" />\r\n                                    </button>\r\n                                    <button className=\"action-button leave-list-button\" onClick={() => leaveSharedList(list.id)}>\r\n                                        <FaSignOutAlt className=\"button-icon\" />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n            \r\n            <IOSAlert\r\n                isOpen={alertConfig.isOpen}\r\n                onClose={closeAlert}\r\n                onConfirm={alertConfig.onConfirm}\r\n                title={alertConfig.title}\r\n                message={alertConfig.message}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Collaborate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}