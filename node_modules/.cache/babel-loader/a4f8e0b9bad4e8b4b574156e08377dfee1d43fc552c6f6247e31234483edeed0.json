{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonch\\\\OneDrive\\\\Desktop\\\\deseosdedos\\\\src\\\\components\\\\Reminders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { database, auth } from '../services/firebase';\nimport { ref, onValue, push, remove, update } from 'firebase/database';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { FaCheck, FaTimes, FaUndo, FaCalendarAlt, FaHourglassHalf, FaCheckCircle } from 'react-icons/fa';\nimport IOSAlert from './IOSAlert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminders = () => {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  const [newReminder, setNewReminder] = useState({\n    title: '',\n    date: new Date(),\n    completed: false\n  });\n  const [sharedListId, setSharedListId] = useState(null);\n  const [alertConfig, setAlertConfig] = useState({\n    isOpen: false,\n    title: '',\n    message: '',\n    onConfirm: null\n  });\n  useEffect(() => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      // Cargar recordatorios personales\n      const personalRemindersRef = ref(database, `reminders/${currentUser.uid}/personal`);\n      const unsubscribePersonal = onValue(personalRemindersRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          const reminderList = Object.entries(data).map(([key, value]) => ({\n            id: key,\n            ...value,\n            owner: currentUser.uid,\n            isPersonal: true\n          }));\n          setReminders(prevReminders => {\n            const sharedReminders = prevReminders.filter(reminder => !reminder.isPersonal);\n            return [...sharedReminders, ...reminderList];\n          });\n        }\n      });\n\n      // Buscar y cargar recordatorios compartidos\n      const sharedListsRef = ref(database, 'sharedReminders');\n      const unsubscribeShared = onValue(sharedListsRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          const sharedList = Object.entries(data).find(([_, value]) => value.accepted && value.owners.includes(currentUser.uid));\n          if (sharedList) {\n            setSharedListId(sharedList[0]);\n            const sharedReminderList = Object.entries(sharedList[1].reminders || {}).flatMap(([uid, reminders]) => Object.entries(reminders).map(([key, value]) => ({\n              id: key,\n              ...value,\n              owner: uid,\n              isPersonal: false\n            })));\n            setReminders(prevReminders => {\n              const personalReminders = prevReminders.filter(reminder => reminder.isPersonal);\n              return [...personalReminders, ...sharedReminderList];\n            });\n          }\n        }\n      });\n      return () => {\n        unsubscribePersonal();\n        unsubscribeShared();\n      };\n    }\n  }, []);\n  const addReminder = e => {\n    e.preventDefault();\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      const newReminderData = {\n        ...newReminder,\n        owner: currentUser.uid,\n        date: newReminder.date.toISOString(),\n        completed: false\n      };\n      const reminderRef = sharedListId ? ref(database, `sharedReminders/${sharedListId}/reminders/${currentUser.uid}`) : ref(database, `reminders/${currentUser.uid}/personal`);\n      push(reminderRef, newReminderData);\n      setNewReminder({\n        title: '',\n        date: new Date(),\n        completed: false\n      });\n    }\n  };\n  const toggleCompleted = reminder => {\n    const action = reminder.completed ? \"desmarcar\" : \"marcar como completado\";\n    setAlertConfig({\n      title: `${action.charAt(0).toUpperCase() + action.slice(1)} recordatorio`,\n      message: `¿Estás seguro que quieres ${action} este recordatorio?`,\n      onConfirm: () => {\n        const currentUser = auth.currentUser;\n        if (currentUser) {\n          const reminderRef = sharedListId ? ref(database, `sharedReminders/${sharedListId}/reminders/${reminder.owner}/${reminder.id}`) : ref(database, `reminders/${currentUser.uid}/personal/${reminder.id}`);\n          const updatedReminder = {\n            ...reminder,\n            completed: !reminder.completed\n          };\n          update(reminderRef, updatedReminder);\n        }\n        setAlertConfig({\n          ...alertConfig,\n          isOpen: false\n        });\n      }\n    });\n    setAlertConfig({\n      ...alertConfig,\n      isOpen: true\n    });\n  };\n  const deleteReminder = reminder => {\n    setAlertConfig({\n      title: \"Eliminar recordatorio\",\n      message: \"¿Estás seguro que quieres eliminar este recordatorio?\",\n      onConfirm: () => {\n        const currentUser = auth.currentUser;\n        if (currentUser) {\n          const reminderRef = sharedListId ? ref(database, `sharedReminders/${sharedListId}/reminders/${reminder.owner}/${reminder.id}`) : ref(database, `reminders/${currentUser.uid}/personal/${reminder.id}`);\n          remove(reminderRef);\n        }\n        setAlertConfig({\n          ...alertConfig,\n          isOpen: false\n        });\n      }\n    });\n    setAlertConfig({\n      ...alertConfig,\n      isOpen: true\n    });\n  };\n  const sortedReminders = reminders.sort((a, b) => new Date(a.date) - new Date(b.date));\n  const nextReminders = sortedReminders.filter(reminder => !reminder.completed && new Date(reminder.date) >= new Date());\n  const pastReminders = sortedReminders.filter(reminder => !reminder.completed && new Date(reminder.date) < new Date());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ios-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"ios-page-title\",\n      children: \"Recordatorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addReminder,\n      className: \"ios-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newReminder.title,\n        onChange: e => setNewReminder({\n          ...newReminder,\n          title: e.target.value\n        }),\n        placeholder: \"T\\xEDtulo del recordatorio\",\n        className: \"ios-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: newReminder.date,\n        onChange: date => setNewReminder({\n          ...newReminder,\n          date\n        }),\n        dateFormat: \"dd/MM/yyyy\",\n        className: \"ios-datepicker\",\n        placeholderText: \"Seleccionar fecha\",\n        isClearable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ios-button\",\n        children: \"Agregar Recordatorio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: nextReminders.map(reminder => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: reminder.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(reminder.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleCompleted(reminder),\n              className: \"ios-button-icon ios-button-complete\",\n              \"aria-label\": \"Completar\",\n              children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(reminder),\n              className: \"ios-button-icon ios-button-delete\",\n              \"aria-label\": \"Eliminar\",\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this)]\n        }, reminder.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), pastReminders.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ios-section-title\",\n        children: [\"Pr\\xF3ximos Recordatorios \", /*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n          className: \"ios-section-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: pastReminders.map(reminder => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: reminder.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(reminder.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleCompleted(reminder),\n              className: \"ios-button-icon ios-button-complete\",\n              \"aria-label\": \"Completar\",\n              children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(reminder),\n              className: \"ios-button-icon ios-button-delete\",\n              \"aria-label\": \"Eliminar\",\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this)]\n        }, reminder.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this), reminders.filter(reminder => reminder.completed).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ios-section-title\",\n        children: [\"Recordatorios Completados \", /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n          className: \"ios-section-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: reminders.filter(reminder => reminder.completed).map(reminder => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: reminder.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(reminder.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleCompleted(reminder),\n              className: \"ios-button-icon ios-button-undo\",\n              \"aria-label\": \"Desmarcar\",\n              children: /*#__PURE__*/_jsxDEV(FaUndo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(reminder),\n              className: \"ios-button-icon ios-button-delete\",\n              \"aria-label\": \"Eliminar\",\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 33\n          }, this)]\n        }, reminder.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(IOSAlert, {\n      isOpen: alertConfig.isOpen,\n      onClose: () => setAlertConfig({\n        ...alertConfig,\n        isOpen: false\n      }),\n      onConfirm: alertConfig.onConfirm,\n      title: alertConfig.title,\n      message: alertConfig.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n_s(Reminders, \"YejGh8w2HD3my69GtT/Q22AuEF0=\");\n_c = Reminders;\nexport default Reminders;\nvar _c;\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"names":["React","useState","useEffect","database","auth","ref","onValue","push","remove","update","DatePicker","FaCheck","FaTimes","FaUndo","FaCalendarAlt","FaHourglassHalf","FaCheckCircle","IOSAlert","jsxDEV","_jsxDEV","Reminders","_s","reminders","setReminders","newReminder","setNewReminder","title","date","Date","completed","sharedListId","setSharedListId","alertConfig","setAlertConfig","isOpen","message","onConfirm","currentUser","personalRemindersRef","uid","unsubscribePersonal","snapshot","data","val","reminderList","Object","entries","map","key","value","id","owner","isPersonal","prevReminders","sharedReminders","filter","reminder","sharedListsRef","unsubscribeShared","sharedList","find","_","accepted","owners","includes","sharedReminderList","flatMap","personalReminders","addReminder","e","preventDefault","newReminderData","toISOString","reminderRef","toggleCompleted","action","charAt","toUpperCase","slice","updatedReminder","deleteReminder","sortedReminders","sort","a","b","nextReminders","pastReminders","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","placeholder","required","selected","dateFormat","placeholderText","isClearable","toLocaleDateString","onClick","length","onClose","_c","$RefreshReg$"],"sources":["C:/Users/gonch/OneDrive/Desktop/deseosdedos/src/components/Reminders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { database, auth } from '../services/firebase';\r\nimport { ref, onValue, push, remove, update } from 'firebase/database';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { FaCheck, FaTimes, FaUndo, FaCalendarAlt, FaHourglassHalf, FaCheckCircle } from 'react-icons/fa';\r\nimport IOSAlert from './IOSAlert';\r\n\r\nconst Reminders = () => {\r\n    const [reminders, setReminders] = useState([]);\r\n    const [newReminder, setNewReminder] = useState({ title: '', date: new Date(), completed: false });\r\n    const [sharedListId, setSharedListId] = useState(null);\r\n    const [alertConfig, setAlertConfig] = useState({ isOpen: false, title: '', message: '', onConfirm: null });\r\n\r\n    useEffect(() => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            // Cargar recordatorios personales\r\n            const personalRemindersRef = ref(database, `reminders/${currentUser.uid}/personal`);\r\n            const unsubscribePersonal = onValue(personalRemindersRef, (snapshot) => {\r\n                const data = snapshot.val();\r\n                if (data) {\r\n                    const reminderList = Object.entries(data).map(([key, value]) => ({\r\n                        id: key,\r\n                        ...value,\r\n                        owner: currentUser.uid,\r\n                        isPersonal: true\r\n                    }));\r\n                    setReminders(prevReminders => {\r\n                        const sharedReminders = prevReminders.filter(reminder => !reminder.isPersonal);\r\n                        return [...sharedReminders, ...reminderList];\r\n                    });\r\n                }\r\n            });\r\n    \r\n            // Buscar y cargar recordatorios compartidos\r\n            const sharedListsRef = ref(database, 'sharedReminders');\r\n            const unsubscribeShared = onValue(sharedListsRef, (snapshot) => {\r\n                const data = snapshot.val();\r\n                if (data) {\r\n                    const sharedList = Object.entries(data).find(([_, value]) => \r\n                        value.accepted && value.owners.includes(currentUser.uid)\r\n                    );\r\n                    if (sharedList) {\r\n                        setSharedListId(sharedList[0]);\r\n                        const sharedReminderList = Object.entries(sharedList[1].reminders || {}).flatMap(([uid, reminders]) => \r\n                            Object.entries(reminders).map(([key, value]) => ({\r\n                                id: key,\r\n                                ...value,\r\n                                owner: uid,\r\n                                isPersonal: false\r\n                            }))\r\n                        );\r\n                        setReminders(prevReminders => {\r\n                            const personalReminders = prevReminders.filter(reminder => reminder.isPersonal);\r\n                            return [...personalReminders, ...sharedReminderList];\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    \r\n            return () => {\r\n                unsubscribePersonal();\r\n                unsubscribeShared();\r\n            };\r\n        }\r\n    }, []);\r\n\r\n    const addReminder = (e) => {\r\n        e.preventDefault();\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            const newReminderData = {\r\n                ...newReminder,\r\n                owner: currentUser.uid,\r\n                date: newReminder.date.toISOString(),\r\n                completed: false\r\n            };\r\n            \r\n            const reminderRef = sharedListId\r\n                ? ref(database, `sharedReminders/${sharedListId}/reminders/${currentUser.uid}`)\r\n                : ref(database, `reminders/${currentUser.uid}/personal`);\r\n            \r\n            push(reminderRef, newReminderData);\r\n            setNewReminder({ title: '', date: new Date(), completed: false });\r\n        }\r\n    };\r\n\r\n    const toggleCompleted = (reminder) => {\r\n        const action = reminder.completed ? \"desmarcar\" : \"marcar como completado\";\r\n        setAlertConfig({\r\n            title: `${action.charAt(0).toUpperCase() + action.slice(1)} recordatorio`,\r\n            message: `¿Estás seguro que quieres ${action} este recordatorio?`,\r\n            onConfirm: () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    const reminderRef = sharedListId\r\n                        ? ref(database, `sharedReminders/${sharedListId}/reminders/${reminder.owner}/${reminder.id}`)\r\n                        : ref(database, `reminders/${currentUser.uid}/personal/${reminder.id}`);\r\n                    \r\n                    const updatedReminder = { ...reminder, completed: !reminder.completed };\r\n                    update(reminderRef, updatedReminder);\r\n                }\r\n                setAlertConfig({ ...alertConfig, isOpen: false });\r\n            }\r\n        });\r\n        setAlertConfig({ ...alertConfig, isOpen: true });\r\n    };\r\n\r\n    const deleteReminder = (reminder) => {\r\n        setAlertConfig({\r\n            title: \"Eliminar recordatorio\",\r\n            message: \"¿Estás seguro que quieres eliminar este recordatorio?\",\r\n            onConfirm: () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    const reminderRef = sharedListId\r\n                        ? ref(database, `sharedReminders/${sharedListId}/reminders/${reminder.owner}/${reminder.id}`)\r\n                        : ref(database, `reminders/${currentUser.uid}/personal/${reminder.id}`);\r\n                    \r\n                    remove(reminderRef);\r\n                }\r\n                setAlertConfig({ ...alertConfig, isOpen: false });\r\n            }\r\n        });\r\n        setAlertConfig({ ...alertConfig, isOpen: true });\r\n    };\r\n\r\n    const sortedReminders = reminders.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n    const nextReminders = sortedReminders.filter(reminder => !reminder.completed && new Date(reminder.date) >= new Date());\r\n    const pastReminders = sortedReminders.filter(reminder => !reminder.completed && new Date(reminder.date) < new Date());\r\n    \r\n    return (\r\n        <div className=\"ios-page\">\r\n            <h2 className=\"ios-page-title\">Recordatorios</h2>\r\n            <form onSubmit={addReminder} className=\"ios-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newReminder.title}\r\n                    onChange={(e) => setNewReminder({...newReminder, title: e.target.value})}\r\n                    placeholder=\"Título del recordatorio\"\r\n                    className=\"ios-input\"\r\n                    required\r\n                />\r\n                <DatePicker\r\n                    selected={newReminder.date}\r\n                    onChange={(date) => setNewReminder({...newReminder, date})}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    className=\"ios-datepicker\"\r\n                    placeholderText=\"Seleccionar fecha\"\r\n                    isClearable\r\n                />\r\n                <button type=\"submit\" className=\"ios-button\">Agregar Recordatorio</button>\r\n            </form>\r\n            <div className=\"ios-section\">\r\n                <ul className=\"ios-list\">\r\n                    {nextReminders.map((reminder) => (\r\n                        <li key={reminder.id} className=\"ios-list-item\">\r\n                            <div className=\"ios-list-item-content\">\r\n                                <div className=\"ios-list-item-title\">{reminder.title}</div>\r\n                                <div className=\"ios-list-item-details\">\r\n                                    <span className=\"ios-list-item-date\">{new Date(reminder.date).toLocaleDateString()}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"ios-list-item-actions\">\r\n                                <button onClick={() => toggleCompleted(reminder)} className=\"ios-button-icon ios-button-complete\" aria-label=\"Completar\">\r\n                                    <FaCheck />\r\n                                </button>\r\n                                <button onClick={() => deleteReminder(reminder)} className=\"ios-button-icon ios-button-delete\" aria-label=\"Eliminar\">\r\n                                    <FaTimes />\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            {pastReminders.length > 0 && (\r\n                <div className=\"ios-section\">\r\n                    <h3 className=\"ios-section-title\">\r\n                        Próximos Recordatorios <FaCalendarAlt className=\"ios-section-icon\" />\r\n                    </h3>\r\n                    <ul className=\"ios-list\">\r\n                        {pastReminders.map((reminder) => (\r\n                            <li key={reminder.id} className=\"ios-list-item\">\r\n                                <div className=\"ios-list-item-content\">\r\n                                    <div className=\"ios-list-item-title\">{reminder.title}</div>\r\n                                    <div className=\"ios-list-item-details\">\r\n                                        <span className=\"ios-list-item-date\">{new Date(reminder.date).toLocaleDateString()}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ios-list-item-actions\">\r\n                                    <button onClick={() => toggleCompleted(reminder)} className=\"ios-button-icon ios-button-complete\" aria-label=\"Completar\">\r\n                                        <FaCheck />\r\n                                    </button>\r\n                                    <button onClick={() => deleteReminder(reminder)} className=\"ios-button-icon ios-button-delete\" aria-label=\"Eliminar\">\r\n                                        <FaTimes />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n            {reminders.filter(reminder => reminder.completed).length > 0 && (\r\n                <div className=\"ios-section\">\r\n                    <h3 className=\"ios-section-title\">\r\n                        Recordatorios Completados <FaCheckCircle className=\"ios-section-icon\" />\r\n                    </h3>\r\n                    <ul className=\"ios-list\">\r\n                        {reminders.filter(reminder => reminder.completed).map((reminder) => (\r\n                            <li key={reminder.id} className=\"ios-list-item\">\r\n                                <div className=\"ios-list-item-content\">\r\n                                    <div className=\"ios-list-item-title\">{reminder.title}</div>\r\n                                    <div className=\"ios-list-item-details\">\r\n                                        <span className=\"ios-list-item-date\">{new Date(reminder.date).toLocaleDateString()}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ios-list-item-actions\">\r\n                                    <button onClick={() => toggleCompleted(reminder)} className=\"ios-button-icon ios-button-undo\" aria-label=\"Desmarcar\">\r\n                                        <FaUndo />\r\n                                    </button>\r\n                                    <button onClick={() => deleteReminder(reminder)} className=\"ios-button-icon ios-button-delete\" aria-label=\"Eliminar\">\r\n                                        <FaTimes />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n            <IOSAlert\r\n                isOpen={alertConfig.isOpen}\r\n                onClose={() => setAlertConfig({ ...alertConfig, isOpen: false })}\r\n                onConfirm={alertConfig.onConfirm}\r\n                title={alertConfig.title}\r\n                message={alertConfig.message}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Reminders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}