{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonch\\\\OneDrive\\\\Desktop\\\\deseosdedos\\\\src\\\\components\\\\Collaborate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { database, auth } from '../services/firebase';\nimport { ref, push, set, onValue, get, update, remove } from 'firebase/database';\nimport IOSAlert from './IOSAlert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Collaborate = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [invitations, setInvitations] = useState([]);\n  const [sharedLists, setSharedLists] = useState([]);\n  const [hasWishList, setHasWishList] = useState(false);\n  const [alertConfig, setAlertConfig] = useState({\n    isOpen: false,\n    title: '',\n    message: '',\n    onConfirm: null\n  });\n  useEffect(() => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      // Verificar si el usuario tiene una lista de deseos\n      const userRef = ref(database, `users/${currentUser.uid}/wishlist`);\n      get(userRef).then(snapshot => {\n        setHasWishList(snapshot.exists() && snapshot.val() !== null);\n      });\n\n      // Obtener invitaciones y listas compartidas\n      const sharedListsRef = ref(database, 'sharedLists');\n      onValue(sharedListsRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          const invitationList = [];\n          const sharedListArray = [];\n          Object.entries(data).forEach(([key, value]) => {\n            if (value.invitedEmail === currentUser.email && !value.accepted) {\n              invitationList.push({\n                id: key,\n                ...value\n              });\n            } else if (value.owners.includes(currentUser.uid) || value.invitedEmail === currentUser.email && value.accepted) {\n              sharedListArray.push({\n                id: key,\n                ...value\n              });\n            }\n          });\n          setInvitations(invitationList);\n          setSharedLists(sharedListArray);\n        }\n      });\n    }\n  }, []);\n  const showAlert = (title, message, onConfirm) => {\n    setAlertConfig({\n      isOpen: true,\n      title,\n      message,\n      onConfirm\n    });\n  };\n  const closeAlert = () => {\n    setAlertConfig({\n      ...alertConfig,\n      isOpen: false\n    });\n  };\n  const inviteCollaborator = async () => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      try {\n        const userRef = ref(database, `users/${currentUser.uid}/events`);\n        let userEvents = await get(userRef);\n        const newListRef = push(ref(database, 'sharedLists'));\n        await set(newListRef, {\n          owners: [currentUser.uid],\n          invitedEmail: email,\n          accepted: false,\n          events: {\n            [currentUser.uid]: userEvents.val() || {}\n          }\n        });\n        alert('Invitación enviada a ' + email);\n        setEmail('');\n      } catch (error) {\n        console.error('Error al enviar invitación:', error);\n        alert('Error al enviar la invitación. Por favor, intenta de nuevo.');\n      }\n    } else {\n      alert('Debes estar autenticado para enviar invitaciones.');\n    }\n  };\n  const acceptInvitation = async invitationId => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      try {\n        const invitationRef = ref(database, `sharedLists/${invitationId}`);\n        const snapshot = await get(invitationRef);\n        const invitationData = snapshot.val();\n        if (invitationData && invitationData.invitedEmail === currentUser.email) {\n          const userEventsRef = ref(database, `users/${currentUser.uid}/events`);\n          const userEventsSnapshot = await get(userEventsRef);\n          const currentUserEvents = userEventsSnapshot.val() || {};\n\n          // Crear un objeto de actualización válido\n          const updateData = {\n            accepted: true,\n            owners: [...invitationData.owners, currentUser.uid]\n          };\n\n          // Añadir los eventos del usuario actual a la lista compartida\n          Object.keys(currentUserEvents).forEach(eventId => {\n            updateData[`events/${currentUser.uid}/${eventId}`] = currentUserEvents[eventId];\n          });\n          await update(invitationRef, updateData);\n          alert('Invitación aceptada');\n        } else {\n          throw new Error('No tienes permiso para aceptar esta invitación');\n        }\n      } catch (error) {\n        console.error('Error al aceptar la invitación:', error);\n        alert('Error al aceptar la invitación. Por favor, intenta de nuevo.');\n      }\n    }\n  };\n  const leaveSharedList = async listId => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      try {\n        const listRef = ref(database, `sharedLists/${listId}`);\n        const snapshot = await get(listRef);\n        const listData = snapshot.val();\n        if (listData && listData.owners.includes(currentUser.uid)) {\n          const updatedOwners = listData.owners.filter(uid => uid !== currentUser.uid);\n          if (updatedOwners.length > 0) {\n            // Actualizar la lista sin el usuario actual\n            await update(listRef, {\n              owners: updatedOwners\n            });\n            // Eliminar los eventos del usuario de la lista compartida\n            if (listData.events && listData.events[currentUser.uid]) {\n              await remove(ref(database, `sharedLists/${listId}/events/${currentUser.uid}`));\n            }\n          } else {\n            // Si no quedan propietarios, eliminar la lista compartida\n            await remove(listRef);\n          }\n          alert('Has salido de la lista compartida');\n        } else {\n          throw new Error('No tienes permiso para salir de esta lista');\n        }\n      } catch (error) {\n        console.error('Error al salir de la lista compartida:', error);\n        alert('Error al salir de la lista compartida. Por favor, intenta de nuevo.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"Colaborar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invite-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email del colaborador\",\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inviteCollaborator,\n        className: \"button\",\n        children: \"Enviar Invitaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invitations-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Invitaciones pendientes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), invitations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-invitations\",\n        children: \"No hay invitaciones pendientes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"invitation-list\",\n        children: invitations.map(invitation => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"invitation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Invitaci\\xF3n recibida de: \", invitation.owners[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => acceptInvitation(invitation.id),\n            className: \"button\",\n            children: \"Aceptar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this)]\n        }, invitation.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shared-lists-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Listas compartidas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), sharedLists.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-shared-lists\",\n        children: \"No hay listas compartidas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"shared-list\",\n        children: sharedLists.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"shared-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shared-list-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"shared-list-title\",\n              children: \"Lista compartida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"shared-list-collaborators\",\n              children: [\"Colaboradores: \", list.owners.filter(owner => owner !== auth.currentUser.uid).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shared-list-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"leave-list-button\",\n              onClick: () => leaveSharedList(list.id),\n              children: \"Salir de la lista\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 33\n          }, this)]\n        }, list.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n_s(Collaborate, \"0Uqj7s8x6ivVnVyJ8jwE5uXWPZs=\");\n_c = Collaborate;\nexport default Collaborate;\nvar _c;\n$RefreshReg$(_c, \"Collaborate\");","map":{"version":3,"names":["React","useState","useEffect","database","auth","ref","push","set","onValue","get","update","remove","IOSAlert","jsxDEV","_jsxDEV","Collaborate","_s","email","setEmail","invitations","setInvitations","sharedLists","setSharedLists","hasWishList","setHasWishList","alertConfig","setAlertConfig","isOpen","title","message","onConfirm","currentUser","userRef","uid","then","snapshot","exists","val","sharedListsRef","data","invitationList","sharedListArray","Object","entries","forEach","key","value","invitedEmail","accepted","id","owners","includes","showAlert","closeAlert","inviteCollaborator","userEvents","newListRef","events","alert","error","console","acceptInvitation","invitationId","invitationRef","invitationData","userEventsRef","userEventsSnapshot","currentUserEvents","updateData","keys","eventId","Error","leaveSharedList","listId","listRef","listData","updatedOwners","filter","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","map","invitation","list","owner","join","_c","$RefreshReg$"],"sources":["C:/Users/gonch/OneDrive/Desktop/deseosdedos/src/components/Collaborate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { database, auth } from '../services/firebase';\r\nimport { ref, push, set, onValue, get, update, remove } from 'firebase/database';\r\nimport IOSAlert from './IOSAlert';\r\n\r\nconst Collaborate = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [invitations, setInvitations] = useState([]);\r\n    const [sharedLists, setSharedLists] = useState([]);\r\n    const [hasWishList, setHasWishList] = useState(false);\r\n    const [alertConfig, setAlertConfig] = useState({ isOpen: false, title: '', message: '', onConfirm: null });\r\n\r\n    useEffect(() => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            // Verificar si el usuario tiene una lista de deseos\r\n            const userRef = ref(database, `users/${currentUser.uid}/wishlist`);\r\n            get(userRef).then((snapshot) => {\r\n                setHasWishList(snapshot.exists() && snapshot.val() !== null);\r\n            });\r\n\r\n            // Obtener invitaciones y listas compartidas\r\n            const sharedListsRef = ref(database, 'sharedLists');\r\n            onValue(sharedListsRef, (snapshot) => {\r\n                const data = snapshot.val();\r\n                if (data) {\r\n                    const invitationList = [];\r\n                    const sharedListArray = [];\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        if (value.invitedEmail === currentUser.email && !value.accepted) {\r\n                            invitationList.push({ id: key, ...value });\r\n                        } else if (value.owners.includes(currentUser.uid) || (value.invitedEmail === currentUser.email && value.accepted)) {\r\n                            sharedListArray.push({ id: key, ...value });\r\n                        }\r\n                    });\r\n                    setInvitations(invitationList);\r\n                    setSharedLists(sharedListArray);\r\n                }\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const showAlert = (title, message, onConfirm) => {\r\n        setAlertConfig({ isOpen: true, title, message, onConfirm });\r\n    };\r\n\r\n    const closeAlert = () => {\r\n        setAlertConfig({ ...alertConfig, isOpen: false });\r\n    };\r\n\r\n    const inviteCollaborator = async () => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            try {\r\n                const userRef = ref(database, `users/${currentUser.uid}/events`);\r\n                let userEvents = await get(userRef);\r\n                \r\n                const newListRef = push(ref(database, 'sharedLists'));\r\n                await set(newListRef, {\r\n                    owners: [currentUser.uid],\r\n                    invitedEmail: email,\r\n                    accepted: false,\r\n                    events: {\r\n                        [currentUser.uid]: userEvents.val() || {}\r\n                    }\r\n                });\r\n                alert('Invitación enviada a ' + email);\r\n                setEmail('');\r\n            } catch (error) {\r\n                console.error('Error al enviar invitación:', error);\r\n                alert('Error al enviar la invitación. Por favor, intenta de nuevo.');\r\n            }\r\n        } else {\r\n            alert('Debes estar autenticado para enviar invitaciones.');\r\n        }\r\n    };\r\n\r\n    const acceptInvitation = async (invitationId) => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            try {\r\n                const invitationRef = ref(database, `sharedLists/${invitationId}`);\r\n                const snapshot = await get(invitationRef);\r\n                const invitationData = snapshot.val();\r\n                if (invitationData && invitationData.invitedEmail === currentUser.email) {\r\n                    const userEventsRef = ref(database, `users/${currentUser.uid}/events`);\r\n                    const userEventsSnapshot = await get(userEventsRef);\r\n                    const currentUserEvents = userEventsSnapshot.val() || {};\r\n\r\n                    // Crear un objeto de actualización válido\r\n                    const updateData = {\r\n                        accepted: true,\r\n                        owners: [...invitationData.owners, currentUser.uid]\r\n                    };\r\n\r\n                    // Añadir los eventos del usuario actual a la lista compartida\r\n                    Object.keys(currentUserEvents).forEach(eventId => {\r\n                        updateData[`events/${currentUser.uid}/${eventId}`] = currentUserEvents[eventId];\r\n                    });\r\n\r\n                    await update(invitationRef, updateData);\r\n                    alert('Invitación aceptada');\r\n                } else {\r\n                    throw new Error('No tienes permiso para aceptar esta invitación');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al aceptar la invitación:', error);\r\n                alert('Error al aceptar la invitación. Por favor, intenta de nuevo.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const leaveSharedList = async (listId) => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            try {\r\n                const listRef = ref(database, `sharedLists/${listId}`);\r\n                const snapshot = await get(listRef);\r\n                const listData = snapshot.val();\r\n\r\n                if (listData && listData.owners.includes(currentUser.uid)) {\r\n                    const updatedOwners = listData.owners.filter(uid => uid !== currentUser.uid);\r\n                    \r\n                    if (updatedOwners.length > 0) {\r\n                        // Actualizar la lista sin el usuario actual\r\n                        await update(listRef, {\r\n                            owners: updatedOwners\r\n                        });\r\n                        // Eliminar los eventos del usuario de la lista compartida\r\n                        if (listData.events && listData.events[currentUser.uid]) {\r\n                            await remove(ref(database, `sharedLists/${listId}/events/${currentUser.uid}`));\r\n                        }\r\n                    } else {\r\n                        // Si no quedan propietarios, eliminar la lista compartida\r\n                        await remove(listRef);\r\n                    }\r\n                    \r\n                    alert('Has salido de la lista compartida');\r\n                } else {\r\n                    throw new Error('No tienes permiso para salir de esta lista');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al salir de la lista compartida:', error);\r\n                alert('Error al salir de la lista compartida. Por favor, intenta de nuevo.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h2 className=\"page-title\">Colaborar</h2>\r\n            \r\n            {/* Formulario de invitación */}\r\n            <div className=\"invite-form\">\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email del colaborador\"\r\n                    className=\"input\"\r\n                />\r\n                <button onClick={inviteCollaborator} className=\"button\">\r\n                    Enviar Invitación\r\n                </button>\r\n            </div>\r\n\r\n            {/* Sección de invitaciones pendientes */}\r\n            <div className=\"invitations-section\">\r\n                <h3 className=\"section-title\">Invitaciones pendientes:</h3>\r\n                {invitations.length === 0 ? (\r\n                    <p className=\"no-invitations\">No hay invitaciones pendientes.</p>\r\n                ) : (\r\n                    <ul className=\"invitation-list\">\r\n                        {invitations.map((invitation) => (\r\n                            <li key={invitation.id} className=\"invitation-item\">\r\n                                <span>Invitación recibida de: {invitation.owners[0]}</span>\r\n                                <button onClick={() => acceptInvitation(invitation.id)} className=\"button\">\r\n                                    Aceptar\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n\r\n            {/* Sección de listas compartidas */}\r\n            <div className=\"shared-lists-section\">\r\n                <h3 className=\"section-title\">Listas compartidas:</h3>\r\n                {sharedLists.length === 0 ? (\r\n                    <p className=\"no-shared-lists\">No hay listas compartidas.</p>\r\n                ) : (\r\n                    <ul className=\"shared-list\">\r\n                        {sharedLists.map((list) => (\r\n                            <li key={list.id} className=\"shared-list-item\">\r\n                                <div className=\"shared-list-info\">\r\n                                    <span className=\"shared-list-title\">Lista compartida</span>\r\n                                    <span className=\"shared-list-collaborators\">\r\n                                        Colaboradores: {list.owners.filter(owner => owner !== auth.currentUser.uid).join(', ')}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"shared-list-actions\">\r\n                                    <button className=\"leave-list-button\" onClick={() => leaveSharedList(list.id)}>Salir de la lista</button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Collaborate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}