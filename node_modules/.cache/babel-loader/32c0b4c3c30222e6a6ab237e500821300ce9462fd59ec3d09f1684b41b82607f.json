{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonch\\\\OneDrive\\\\Desktop\\\\deseosdedos\\\\src\\\\components\\\\Reminders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { database, auth } from '../services/firebase';\nimport { ref, onValue, push, remove, update } from 'firebase/database';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { FaCheck, FaTimes, FaUndo, FaCalendarAlt, FaHourglassHalf, FaCheckCircle, FaEdit } from 'react-icons/fa';\nimport EditReminderModal from './EditReminderModal';\nimport IOSAlert from './IOSAlert';\nimport { Pencil, Check, X, Clock, Zap, CircleX } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminders = () => {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  const [newReminder, setNewReminder] = useState({\n    title: '',\n    date: null,\n    completed: false\n  });\n  const [sharedListId, setSharedListId] = useState(null);\n  const [alertConfig, setAlertConfig] = useState({\n    isOpen: false,\n    title: '',\n    message: '',\n    onConfirm: null\n  });\n  const [editingReminder, setEditingReminder] = useState(null);\n  useEffect(() => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      // Cargar recordatorios personales\n      const personalRemindersRef = ref(database, `reminders/${currentUser.uid}/personal`);\n      const unsubscribePersonal = onValue(personalRemindersRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          const reminderList = Object.entries(data).map(([key, value]) => ({\n            id: key,\n            ...value,\n            owner: currentUser.uid,\n            isPersonal: true\n          }));\n          setReminders(prevReminders => {\n            const sharedReminders = prevReminders.filter(reminder => !reminder.isPersonal);\n            return [...sharedReminders, ...reminderList];\n          });\n        }\n      });\n\n      // Buscar y cargar recordatorios compartidos\n      const sharedListsRef = ref(database, 'sharedLists');\n      const unsubscribeShared = onValue(sharedListsRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          const sharedList = Object.entries(data).find(([_, value]) => value.accepted && value.owners.includes(currentUser.uid));\n          if (sharedList) {\n            const [listId, listData] = sharedList;\n            setSharedListId(listId);\n            const sharedReminderList = Object.entries(listData.reminders || {}).flatMap(([uid, reminders]) => Object.entries(reminders).map(([key, value]) => ({\n              id: key,\n              ...value,\n              owner: uid,\n              isPersonal: false,\n              listId: listId\n            })));\n            setReminders(prevReminders => {\n              const personalReminders = prevReminders.filter(reminder => reminder.isPersonal);\n              return [...personalReminders, ...sharedReminderList];\n            });\n          }\n        }\n      });\n      return () => {\n        unsubscribePersonal();\n        unsubscribeShared();\n      };\n    }\n  }, []);\n  const addReminder = e => {\n    e.preventDefault();\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      const newReminderData = {\n        ...newReminder,\n        owner: currentUser.uid,\n        date: newReminder.date ? newReminder.date.toISOString() : null,\n        completed: false\n      };\n      if (sharedListId) {\n        const sharedReminderRef = ref(database, `sharedLists/${sharedListId}/reminders/${currentUser.uid}`);\n        push(sharedReminderRef, newReminderData);\n      } else {\n        const personalReminderRef = ref(database, `reminders/${currentUser.uid}/personal`);\n        push(personalReminderRef, newReminderData);\n      }\n      setNewReminder({\n        title: '',\n        date: null,\n        completed: false\n      });\n    }\n  };\n  const toggleCompleted = reminder => {\n    const action = reminder.completed ? \"desmarcar\" : \"marcar como completado\";\n    setAlertConfig({\n      isOpen: true,\n      title: `${action.charAt(0).toUpperCase() + action.slice(1)} recordatorio`,\n      message: `¿Estás seguro que quieres ${action} este recordatorio?`,\n      onConfirm: () => {\n        const updatedReminder = {\n          ...reminder,\n          completed: !reminder.completed\n        };\n        const currentUser = auth.currentUser;\n        if (currentUser) {\n          const reminderRef = reminder.isPersonal ? ref(database, `reminders/${currentUser.uid}/personal/${reminder.id}`) : ref(database, `sharedLists/${reminder.listId}/reminders/${reminder.owner}/${reminder.id}`);\n          update(reminderRef, updatedReminder);\n        }\n        setAlertConfig({\n          ...alertConfig,\n          isOpen: false\n        });\n      }\n    });\n  };\n  const deleteReminder = reminder => {\n    setAlertConfig({\n      isOpen: true,\n      title: \"Eliminar recordatorio\",\n      message: \"¿Estás seguro que quieres eliminar este recordatorio?\",\n      onConfirm: () => {\n        const currentUser = auth.currentUser;\n        if (currentUser) {\n          const reminderRef = reminder.isPersonal ? ref(database, `reminders/${currentUser.uid}/personal/${reminder.id}`) : ref(database, `sharedLists/${reminder.listId}/reminders/${reminder.owner}/${reminder.id}`);\n          remove(reminderRef);\n        }\n        setAlertConfig({\n          ...alertConfig,\n          isOpen: false\n        });\n      }\n    });\n  };\n  const editReminder = reminder => {\n    setEditingReminder(reminder);\n  };\n  const handleEditReminder = editedReminder => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      const reminderRef = editedReminder.isPersonal ? ref(database, `reminders/${currentUser.uid}/personal/${editedReminder.id}`) : ref(database, `sharedLists/${editedReminder.listId}/reminders/${editedReminder.owner}/${editedReminder.id}`);\n      const updatedReminder = {\n        ...editedReminder,\n        date: editedReminder.date ? editedReminder.date : null\n      };\n      if (!editedReminder.isPersonal) {\n        updatedReminder.lastEditedBy = currentUser.displayName || currentUser.email;\n        updatedReminder.lastEditedAt = new Date().toISOString();\n      }\n      update(reminderRef, updatedReminder).then(() => {\n        console.log('Recordatorio actualizado con éxito');\n        setEditingReminder(null);\n        setReminders(prevReminders => prevReminders.map(reminder => reminder.id === editedReminder.id ? updatedReminder : reminder));\n      }).catch(error => {\n        console.error('Error al actualizar recordatorio:', error);\n      });\n    }\n  };\n  const updateReminder = e => {\n    e.preventDefault();\n    const currentUser = auth.currentUser;\n    if (currentUser && editingReminder) {\n      const reminderRef = editingReminder.isPersonal ? ref(database, `reminders/${currentUser.uid}/personal/${editingReminder.id}`) : ref(database, `sharedLists/${editingReminder.listId}/reminders/${editingReminder.owner}/${editingReminder.id}`);\n      const updatedReminder = {\n        ...editingReminder,\n        title: newReminder.title,\n        date: newReminder.date.toISOString()\n      };\n      update(reminderRef, updatedReminder);\n      setEditingReminder(null);\n      setNewReminder({\n        title: '',\n        date: new Date(),\n        completed: false\n      });\n    }\n  };\n  const sortedReminders = reminders.sort((a, b) => new Date(a.date) - new Date(b.date));\n  const nextReminders = sortedReminders.filter(reminder => !reminder.completed && new Date(reminder.date) >= new Date());\n  const pastReminders = sortedReminders.filter(reminder => !reminder.completed && new Date(reminder.date) < new Date());\n  const completedReminders = sortedReminders.filter(reminder => reminder.completed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ios-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"ios-page-title\",\n      children: \"Recordatorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addReminder,\n      className: \"ios-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newReminder.title,\n        onChange: e => setNewReminder({\n          ...newReminder,\n          title: e.target.value\n        }),\n        placeholder: \"T\\xEDtulo del recordatorio\",\n        className: \"ios-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: newReminder.date,\n        onChange: date => setNewReminder({\n          ...newReminder,\n          date\n        }),\n        dateFormat: \"dd/MM/yyyy\",\n        className: \"ios-datepicker\",\n        placeholderText: \"Seleccionar fecha\",\n        isClearable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ios-button-reminder\",\n        children: \"Agregar Recordatorio +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ios-section-title\",\n        children: [\"Pr\\xF3ximos Recordatorios \", /*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n          className: \"ios-section-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), nextReminders.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: nextReminders.map(reminder => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: reminder.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(reminder.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 41\n              }, this), !reminder.isPersonal && reminder.lastEditedBy && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-edited\",\n                children: [\"Editado por \", reminder.lastEditedBy]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleCompleted(reminder),\n              className: \"ios-button-icon ios-button-complete\",\n              \"aria-label\": \"Completar\",\n              children: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editReminder(reminder),\n              className: \"ios-button-icon ios-button-edit\",\n              \"aria-label\": \"Editar\",\n              children: /*#__PURE__*/_jsxDEV(Pencil, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(reminder),\n              className: \"ios-button-icon ios-button-delete\",\n              \"aria-label\": \"Eliminar\",\n              children: /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }, this)]\n        }, reminder.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ios-empty-message\",\n        children: \"No tienes pr\\xF3ximos recordatorios.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), pastReminders.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ios-section-title\",\n        children: [\"Recordatorios Pasados \", /*#__PURE__*/_jsxDEV(FaHourglassHalf, {\n          className: \"ios-section-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: pastReminders.map(reminder => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: reminder.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(reminder.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleCompleted(reminder),\n              className: \"ios-button-icon ios-button-complete\",\n              \"aria-label\": \"Completar\",\n              children: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editReminder(reminder),\n              className: \"ios-button-icon ios-button-edit\",\n              \"aria-label\": \"Editar\",\n              children: /*#__PURE__*/_jsxDEV(Pencil, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(reminder),\n              className: \"ios-button-icon ios-button-delete\",\n              \"aria-label\": \"Eliminar\",\n              children: /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 33\n          }, this)]\n        }, reminder.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }, this), completedReminders.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ios-section-title\",\n        children: [\"Recordatorios Completados \", /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n          className: \"ios-section-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: completedReminders.map(reminder => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: reminder.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(reminder.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleCompleted(reminder),\n              className: \"ios-button-icon ios-button-undo\",\n              \"aria-label\": \"Desmarcar\",\n              children: /*#__PURE__*/_jsxDEV(Undo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editReminder(reminder),\n              className: \"ios-button-icon ios-button-edit\",\n              \"aria-label\": \"Editar\",\n              children: /*#__PURE__*/_jsxDEV(Pencil, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(reminder),\n              className: \"ios-button-icon ios-button-delete\",\n              \"aria-label\": \"Eliminar\",\n              children: /*#__PURE__*/_jsxDEV(X, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 33\n          }, this)]\n        }, reminder.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(IOSAlert, {\n      isOpen: alertConfig.isOpen,\n      onClose: () => setAlertConfig({\n        ...alertConfig,\n        isOpen: false\n      }),\n      onConfirm: alertConfig.onConfirm,\n      title: alertConfig.title,\n      message: alertConfig.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this), editingReminder && /*#__PURE__*/_jsxDEV(EditReminderModal, {\n      reminder: editingReminder,\n      onSave: handleEditReminder,\n      onClose: () => {\n        setEditingReminder(null);\n        setNewReminder({\n          title: '',\n          date: null,\n          completed: false\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n};\n_s(Reminders, \"H9IzU2Wkh7xrzaiq3lZw3+t6f4Y=\");\n_c = Reminders;\nexport default Reminders;\nvar _c;\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"names":["React","useState","useEffect","database","auth","ref","onValue","push","remove","update","DatePicker","FaCheck","FaTimes","FaUndo","FaCalendarAlt","FaHourglassHalf","FaCheckCircle","FaEdit","EditReminderModal","IOSAlert","Pencil","Check","X","Clock","Zap","CircleX","jsxDEV","_jsxDEV","Reminders","_s","reminders","setReminders","newReminder","setNewReminder","title","date","completed","sharedListId","setSharedListId","alertConfig","setAlertConfig","isOpen","message","onConfirm","editingReminder","setEditingReminder","currentUser","personalRemindersRef","uid","unsubscribePersonal","snapshot","data","val","reminderList","Object","entries","map","key","value","id","owner","isPersonal","prevReminders","sharedReminders","filter","reminder","sharedListsRef","unsubscribeShared","sharedList","find","_","accepted","owners","includes","listId","listData","sharedReminderList","flatMap","personalReminders","addReminder","e","preventDefault","newReminderData","toISOString","sharedReminderRef","personalReminderRef","toggleCompleted","action","charAt","toUpperCase","slice","updatedReminder","reminderRef","deleteReminder","editReminder","handleEditReminder","editedReminder","lastEditedBy","displayName","email","lastEditedAt","Date","then","console","log","catch","error","updateReminder","sortedReminders","sort","a","b","nextReminders","pastReminders","completedReminders","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","placeholder","required","selected","dateFormat","placeholderText","isClearable","length","toLocaleDateString","onClick","Undo","onClose","onSave","_c","$RefreshReg$"],"sources":["C:/Users/gonch/OneDrive/Desktop/deseosdedos/src/components/Reminders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { database, auth } from '../services/firebase';\r\nimport { ref, onValue, push, remove, update } from 'firebase/database';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { FaCheck, FaTimes, FaUndo, FaCalendarAlt, FaHourglassHalf, FaCheckCircle, FaEdit } from 'react-icons/fa';\r\nimport EditReminderModal from './EditReminderModal';\r\nimport IOSAlert from './IOSAlert';\r\nimport { Pencil, Check, X, Clock, Zap, CircleX } from 'lucide-react';\r\n\r\nconst Reminders = () => {\r\n    const [reminders, setReminders] = useState([]);\r\n    const [newReminder, setNewReminder] = useState({ title: '', date: null, completed: false });\r\n    const [sharedListId, setSharedListId] = useState(null);\r\n    const [alertConfig, setAlertConfig] = useState({ isOpen: false, title: '', message: '', onConfirm: null });\r\n    const [editingReminder, setEditingReminder] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            // Cargar recordatorios personales\r\n            const personalRemindersRef = ref(database, `reminders/${currentUser.uid}/personal`);\r\n            const unsubscribePersonal = onValue(personalRemindersRef, (snapshot) => {\r\n                const data = snapshot.val();\r\n                if (data) {\r\n                    const reminderList = Object.entries(data).map(([key, value]) => ({\r\n                        id: key,\r\n                        ...value,\r\n                        owner: currentUser.uid,\r\n                        isPersonal: true\r\n                    }));\r\n                    setReminders(prevReminders => {\r\n                        const sharedReminders = prevReminders.filter(reminder => !reminder.isPersonal);\r\n                        return [...sharedReminders, ...reminderList];\r\n                    });\r\n                }\r\n            });\r\n    \r\n            // Buscar y cargar recordatorios compartidos\r\n            const sharedListsRef = ref(database, 'sharedLists');\r\n            const unsubscribeShared = onValue(sharedListsRef, (snapshot) => {\r\n                const data = snapshot.val();\r\n                if (data) {\r\n                    const sharedList = Object.entries(data).find(([_, value]) => \r\n                        value.accepted && value.owners.includes(currentUser.uid)\r\n                    );\r\n                    if (sharedList) {\r\n                        const [listId, listData] = sharedList;\r\n                        setSharedListId(listId);\r\n                        const sharedReminderList = Object.entries(listData.reminders || {}).flatMap(([uid, reminders]) => \r\n                            Object.entries(reminders).map(([key, value]) => ({\r\n                                id: key,\r\n                                ...value,\r\n                                owner: uid,\r\n                                isPersonal: false,\r\n                                listId: listId\r\n                            }))\r\n                        );\r\n                        setReminders(prevReminders => {\r\n                            const personalReminders = prevReminders.filter(reminder => reminder.isPersonal);\r\n                            return [...personalReminders, ...sharedReminderList];\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n    \r\n            return () => {\r\n                unsubscribePersonal();\r\n                unsubscribeShared();\r\n            };\r\n        }\r\n    }, []);\r\n    \r\n    const addReminder = (e) => {\r\n        e.preventDefault();\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            const newReminderData = {\r\n                ...newReminder,\r\n                owner: currentUser.uid,\r\n                date: newReminder.date ? newReminder.date.toISOString() : null,\r\n                completed: false\r\n            };\r\n            \r\n            if (sharedListId) {\r\n                const sharedReminderRef = ref(database, `sharedLists/${sharedListId}/reminders/${currentUser.uid}`);\r\n                push(sharedReminderRef, newReminderData);\r\n            } else {\r\n                const personalReminderRef = ref(database, `reminders/${currentUser.uid}/personal`);\r\n                push(personalReminderRef, newReminderData);\r\n            }\r\n            \r\n            setNewReminder({ title: '', date: null, completed: false });\r\n        }\r\n    };\r\n    \r\n    const toggleCompleted = (reminder) => {\r\n        const action = reminder.completed ? \"desmarcar\" : \"marcar como completado\";\r\n        setAlertConfig({\r\n            isOpen: true,\r\n            title: `${action.charAt(0).toUpperCase() + action.slice(1)} recordatorio`,\r\n            message: `¿Estás seguro que quieres ${action} este recordatorio?`,\r\n            onConfirm: () => {\r\n                const updatedReminder = { ...reminder, completed: !reminder.completed };\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    const reminderRef = reminder.isPersonal\r\n                        ? ref(database, `reminders/${currentUser.uid}/personal/${reminder.id}`)\r\n                        : ref(database, `sharedLists/${reminder.listId}/reminders/${reminder.owner}/${reminder.id}`);\r\n                    \r\n                    update(reminderRef, updatedReminder);\r\n                }\r\n                setAlertConfig({ ...alertConfig, isOpen: false });\r\n            }\r\n        });\r\n    };\r\n    \r\n    const deleteReminder = (reminder) => {\r\n        setAlertConfig({\r\n            isOpen: true,\r\n            title: \"Eliminar recordatorio\",\r\n            message: \"¿Estás seguro que quieres eliminar este recordatorio?\",\r\n            onConfirm: () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    const reminderRef = reminder.isPersonal\r\n                        ? ref(database, `reminders/${currentUser.uid}/personal/${reminder.id}`)\r\n                        : ref(database, `sharedLists/${reminder.listId}/reminders/${reminder.owner}/${reminder.id}`);\r\n                    \r\n                    remove(reminderRef);\r\n                }\r\n                setAlertConfig({ ...alertConfig, isOpen: false });\r\n            }\r\n        });\r\n    };\r\n\r\n    const editReminder = (reminder) => {\r\n        setEditingReminder(reminder);\r\n    };\r\n\r\n    const handleEditReminder = (editedReminder) => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            const reminderRef = editedReminder.isPersonal\r\n                ? ref(database, `reminders/${currentUser.uid}/personal/${editedReminder.id}`)\r\n                : ref(database, `sharedLists/${editedReminder.listId}/reminders/${editedReminder.owner}/${editedReminder.id}`);\r\n    \r\n            const updatedReminder = {\r\n                ...editedReminder,\r\n                date: editedReminder.date ? editedReminder.date : null\r\n            };\r\n    \r\n            if (!editedReminder.isPersonal) {\r\n                updatedReminder.lastEditedBy = currentUser.displayName || currentUser.email;\r\n                updatedReminder.lastEditedAt = new Date().toISOString();\r\n            }\r\n    \r\n            update(reminderRef, updatedReminder)\r\n                .then(() => {\r\n                    console.log('Recordatorio actualizado con éxito');\r\n                    setEditingReminder(null);\r\n                    setReminders(prevReminders => \r\n                        prevReminders.map(reminder => \r\n                            reminder.id === editedReminder.id ? updatedReminder : reminder\r\n                        )\r\n                    );\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error al actualizar recordatorio:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const updateReminder = (e) => {\r\n        e.preventDefault();\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser && editingReminder) {\r\n            const reminderRef = editingReminder.isPersonal\r\n                ? ref(database, `reminders/${currentUser.uid}/personal/${editingReminder.id}`)\r\n                : ref(database, `sharedLists/${editingReminder.listId}/reminders/${editingReminder.owner}/${editingReminder.id}`);\r\n            \r\n            const updatedReminder = {\r\n                ...editingReminder,\r\n                title: newReminder.title,\r\n                date: newReminder.date.toISOString(),\r\n            };\r\n            \r\n            update(reminderRef, updatedReminder);\r\n            setEditingReminder(null);\r\n            setNewReminder({ title: '', date: new Date(), completed: false });\r\n        }\r\n    };\r\n\r\n    const sortedReminders = reminders.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n    const nextReminders = sortedReminders.filter(reminder => !reminder.completed && new Date(reminder.date) >= new Date());\r\n    const pastReminders = sortedReminders.filter(reminder => !reminder.completed && new Date(reminder.date) < new Date());\r\n    const completedReminders = sortedReminders.filter(reminder => reminder.completed);\r\n    \r\n    return (\r\n        <div className=\"ios-page\">\r\n            <h2 className=\"ios-page-title\">Recordatorios</h2>\r\n            <form onSubmit={addReminder} className=\"ios-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newReminder.title}\r\n                    onChange={(e) => setNewReminder({...newReminder, title: e.target.value})}\r\n                    placeholder=\"Título del recordatorio\"\r\n                    className=\"ios-input\"\r\n                    required\r\n                />\r\n                <DatePicker\r\n                    selected={newReminder.date}\r\n                    onChange={(date) => setNewReminder({...newReminder, date})}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    className=\"ios-datepicker\"\r\n                    placeholderText=\"Seleccionar fecha\"\r\n                    isClearable\r\n                />\r\n                <button type=\"submit\" className=\"ios-button-reminder\">\r\n                    Agregar Recordatorio +\r\n                </button>\r\n            </form>\r\n            <div className=\"ios-section\">\r\n                <h3 className=\"ios-section-title\">\r\n                    Próximos Recordatorios <FaCalendarAlt className=\"ios-section-icon\" />\r\n                </h3>\r\n                {nextReminders.length > 0 ? (\r\n                    <ul className=\"ios-list\">\r\n                        {nextReminders.map((reminder) => (\r\n                            <li key={reminder.id} className=\"ios-list-item\">\r\n                                <div className=\"ios-list-item-content\">\r\n                                    <div className=\"ios-list-item-title\">{reminder.title}</div>\r\n                                    <div className=\"ios-list-item-details\">\r\n                                        <span className=\"ios-list-item-date\">{new Date(reminder.date).toLocaleDateString()}</span>\r\n                                        {!reminder.isPersonal && reminder.lastEditedBy && (\r\n                                            <span className=\"ios-list-item-edited\">\r\n                                                Editado por {reminder.lastEditedBy}\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ios-list-item-actions\">\r\n                                    <button onClick={() => toggleCompleted(reminder)} className=\"ios-button-icon ios-button-complete\" aria-label=\"Completar\">\r\n                                        <Check />\r\n                                    </button>\r\n                                    <button onClick={() => editReminder(reminder)} className=\"ios-button-icon ios-button-edit\" aria-label=\"Editar\">\r\n                                        <Pencil />\r\n                                    </button>\r\n                                    <button onClick={() => deleteReminder(reminder)} className=\"ios-button-icon ios-button-delete\" aria-label=\"Eliminar\">\r\n                                        <X />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p className=\"ios-empty-message\">No tienes próximos recordatorios.</p>\r\n                )}\r\n            </div>\r\n            {pastReminders.length > 0 && (\r\n                <div className=\"ios-section\">\r\n                    <h3 className=\"ios-section-title\">\r\n                        Recordatorios Pasados <FaHourglassHalf className=\"ios-section-icon\" />\r\n                    </h3>\r\n                    <ul className=\"ios-list\">\r\n                        {pastReminders.map((reminder) => (\r\n                            <li key={reminder.id} className=\"ios-list-item\">\r\n                                <div className=\"ios-list-item-content\">\r\n                                    <div className=\"ios-list-item-title\">{reminder.title}</div>\r\n                                    <div className=\"ios-list-item-details\">\r\n                                        <span className=\"ios-list-item-date\">{new Date(reminder.date).toLocaleDateString()}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ios-list-item-actions\">\r\n                                    <button onClick={() => toggleCompleted(reminder)} className=\"ios-button-icon ios-button-complete\" aria-label=\"Completar\">\r\n                                        <Check />\r\n                                    </button>\r\n                                    <button onClick={() => editReminder(reminder)} className=\"ios-button-icon ios-button-edit\" aria-label=\"Editar\">\r\n                                        <Pencil />\r\n                                    </button>\r\n                                    <button onClick={() => deleteReminder(reminder)} className=\"ios-button-icon ios-button-delete\" aria-label=\"Eliminar\">\r\n                                        <X />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n            {completedReminders.length > 0 && (\r\n                <div className=\"ios-section\">\r\n                    <h3 className=\"ios-section-title\">\r\n                        Recordatorios Completados <FaCheckCircle className=\"ios-section-icon\" />\r\n                    </h3>\r\n                    <ul className=\"ios-list\">\r\n                        {completedReminders.map((reminder) => (\r\n                            <li key={reminder.id} className=\"ios-list-item\">\r\n                                <div className=\"ios-list-item-content\">\r\n                                    <div className=\"ios-list-item-title\">{reminder.title}</div>\r\n                                    <div className=\"ios-list-item-details\">\r\n                                        <span className=\"ios-list-item-date\">{new Date(reminder.date).toLocaleDateString()}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ios-list-item-actions\">\r\n                                    <button onClick={() => toggleCompleted(reminder)} className=\"ios-button-icon ios-button-undo\" aria-label=\"Desmarcar\">\r\n                                        <Undo />\r\n                                    </button>\r\n                                    <button onClick={() => editReminder(reminder)} className=\"ios-button-icon ios-button-edit\" aria-label=\"Editar\">\r\n                                        <Pencil />\r\n                                    </button>\r\n                                    <button onClick={() => deleteReminder(reminder)} className=\"ios-button-icon ios-button-delete\" aria-label=\"Eliminar\">\r\n                                        <X />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n            <IOSAlert\r\n                isOpen={alertConfig.isOpen}\r\n                onClose={() => setAlertConfig({ ...alertConfig, isOpen: false })}\r\n                onConfirm={alertConfig.onConfirm}\r\n                title={alertConfig.title}\r\n                message={alertConfig.message}\r\n            />\r\n            {editingReminder && (\r\n                <EditReminderModal\r\n                    reminder={editingReminder}\r\n                    onSave={handleEditReminder}\r\n                    onClose={() => {\r\n                        setEditingReminder(null);\r\n                        setNewReminder({ title: '', date: null, completed: false });\r\n                    }}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Reminders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}