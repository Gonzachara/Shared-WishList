{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonch\\\\OneDrive\\\\Desktop\\\\deseosdedos\\\\src\\\\components\\\\Reminders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { database, auth } from '../services/firebase';\nimport { ref, onValue, push, remove, update } from 'firebase/database';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { FaCheck, FaTimes, FaUndo, FaCalendarAlt, FaHourglassHalf, FaCheckCircle } from 'react-icons/fa';\nimport IOSAlert from './IOSAlert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminders = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [completedEvents, setCompletedEvents] = useState([]);\n  const [deletedEvents, setDeletedEvents] = useState([]);\n  const [newReminder, setNewReminder] = useState({\n    title: '',\n    date: null,\n    completed: false\n  });\n  const [sharedListId, setSharedListId] = useState(null);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [alertConfig, setAlertConfig] = useState({\n    title: '',\n    message: '',\n    onConfirm: () => {}\n  });\n  useEffect(() => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      const sharedListsRef = ref(database, 'sharedLists');\n      const unsubscribe = onValue(sharedListsRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          const sharedList = Object.entries(data).find(([_, value]) => value.accepted && value.owners.includes(currentUser.uid));\n          if (sharedList) {\n            setSharedListId(sharedList[0]);\n            loadSharedEvents(sharedList[0]);\n          } else {\n            loadPersonalEvents(currentUser.uid);\n          }\n        } else {\n          loadPersonalEvents(currentUser.uid);\n        }\n      });\n      return () => unsubscribe();\n    }\n  }, []);\n  const loadPersonalEvents = userId => {\n    const eventsRef = ref(database, `users/${userId}/events`);\n    onValue(eventsRef, snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        const eventList = Object.entries(data).map(([id, event]) => ({\n          ...event,\n          id,\n          owner: userId\n        }));\n        setEvents(eventList.filter(event => !event.completed));\n        setCompletedEvents(eventList.filter(event => event.completed));\n      } else {\n        setEvents([]);\n        setCompletedEvents([]);\n      }\n    });\n  };\n  const loadSharedEvents = listId => {\n    const sharedEventsRef = ref(database, `sharedLists/${listId}/events`);\n    onValue(sharedEventsRef, snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        const eventList = Object.entries(data).flatMap(([ownerId, ownerEvents]) => Object.entries(ownerEvents).map(([id, event]) => ({\n          ...event,\n          id,\n          owner: ownerId\n        })));\n        setEvents(eventList.filter(event => !event.completed));\n        setCompletedEvents(eventList.filter(event => event.completed));\n      } else {\n        setEvents([]);\n        setCompletedEvents([]);\n      }\n    });\n  };\n  const addReminder = e => {\n    e.preventDefault();\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      const newEvent = {\n        ...newReminder,\n        id: Math.random().toString(36).substr(2, 9),\n        owner: currentUser.uid,\n        date: newReminder.date.toISOString(),\n        completed: false\n      };\n      const eventRef = sharedListId ? ref(database, `sharedLists/${sharedListId}/events/${currentUser.uid}`) : ref(database, `users/${currentUser.uid}/events`);\n      push(eventRef, newEvent);\n      setNewReminder({\n        title: '',\n        date: new Date(),\n        completed: false\n      });\n    }\n  };\n  const toggleCompleted = event => {\n    const action = event.completed ? \"desmarcar\" : \"marcar como completado\";\n    setAlertConfig({\n      title: `${action.charAt(0).toUpperCase() + action.slice(1)} recordatorio`,\n      message: `¿Estás seguro que quieres ${action} este recordatorio?`,\n      onConfirm: () => {\n        const currentUser = auth.currentUser;\n        if (currentUser) {\n          const eventRef = sharedListId ? ref(database, `sharedLists/${sharedListId}/events/${event.owner}/${event.id}`) : ref(database, `users/${currentUser.uid}/events/${event.id}`);\n          const updatedEvent = {\n            ...event,\n            completed: !event.completed\n          };\n          update(eventRef, updatedEvent);\n        }\n        setIsAlertOpen(false);\n      }\n    });\n    setIsAlertOpen(true);\n  };\n  const deleteReminder = event => {\n    setAlertConfig({\n      title: \"Eliminar recordatorio\",\n      message: \"¿Estás seguro que quieres eliminar este recordatorio?\",\n      onConfirm: () => {\n        const currentUser = auth.currentUser;\n        if (currentUser) {\n          const eventRef = sharedListId ? ref(database, `sharedLists/${sharedListId}/events/${event.owner}/${event.id}`) : ref(database, `users/${currentUser.uid}/events/${event.id}`);\n          remove(eventRef);\n        }\n        setIsAlertOpen(false);\n      }\n    });\n    setIsAlertOpen(true);\n  };\n  const sortedEvents = events.sort((a, b) => new Date(a.date) - new Date(b.date));\n  const nextEvents = sortedEvents.filter(event => !event.completed && new Date(event.date) >= new Date());\n  const pastEvents = sortedEvents.filter(event => !event.completed && new Date(event.date) < new Date());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ios-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"ios-page-title\",\n      children: \"Recordatorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addReminder,\n      className: \"ios-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newReminder.title,\n        onChange: e => setNewReminder({\n          ...newReminder,\n          title: e.target.value\n        }),\n        placeholder: \"T\\xEDtulo del recordatorio\",\n        className: \"ios-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: newReminder.date,\n        onChange: date => setNewReminder({\n          ...newReminder,\n          date\n        }),\n        dateFormat: \"dd/MM/yyyy\",\n        className: \"ios-datepicker\",\n        placeholderText: \"Seleccionar fecha\",\n        isClearable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ios-button\",\n        children: \"Agregar Recordatorio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: nextEvents.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(event.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleCompleted(event),\n              className: \"ios-button-icon ios-button-complete\",\n              \"aria-label\": \"Completar\",\n              children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(event),\n              className: \"ios-button-icon ios-button-delete\",\n              \"aria-label\": \"Eliminar\",\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), pastEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ios-section-title\",\n        children: [\"Pr\\xF3ximos Recordatorios \", /*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n          className: \"ios-section-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: pastEvents.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(event.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleCompleted(event),\n              className: \"ios-button-icon ios-button-complete\",\n              \"aria-label\": \"Completar\",\n              children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(event),\n              className: \"ios-button-icon ios-button-delete\",\n              \"aria-label\": \"Eliminar\",\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 33\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }, this), completedEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ios-section-title\",\n        children: [\"Recordatorios Completados \", /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n          className: \"ios-section-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: completedEvents.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(event.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleCompleted(event),\n              className: \"ios-button-icon ios-button-undo\",\n              \"aria-label\": \"Desmarcar\",\n              children: /*#__PURE__*/_jsxDEV(FaUndo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(event),\n              className: \"ios-button-icon ios-button-delete\",\n              \"aria-label\": \"Eliminar\",\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 33\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(IOSAlert, {\n      isOpen: isAlertOpen,\n      onClose: () => setIsAlertOpen(false),\n      onConfirm: alertConfig.onConfirm,\n      title: alertConfig.title,\n      message: alertConfig.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n_s(Reminders, \"m3fK5hmmYVoixUW7V3S/Txp4ZSw=\");\n_c = Reminders;\nexport default Reminders;\nvar _c;\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"names":["React","useState","useEffect","database","auth","ref","onValue","push","remove","update","DatePicker","FaCheck","FaTimes","FaUndo","FaCalendarAlt","FaHourglassHalf","FaCheckCircle","IOSAlert","jsxDEV","_jsxDEV","Reminders","_s","events","setEvents","completedEvents","setCompletedEvents","deletedEvents","setDeletedEvents","newReminder","setNewReminder","title","date","completed","sharedListId","setSharedListId","isAlertOpen","setIsAlertOpen","alertConfig","setAlertConfig","message","onConfirm","currentUser","sharedListsRef","unsubscribe","snapshot","data","val","sharedList","Object","entries","find","_","value","accepted","owners","includes","uid","loadSharedEvents","loadPersonalEvents","userId","eventsRef","eventList","map","id","event","owner","filter","listId","sharedEventsRef","flatMap","ownerId","ownerEvents","addReminder","e","preventDefault","newEvent","Math","random","toString","substr","toISOString","eventRef","Date","toggleCompleted","action","charAt","toUpperCase","slice","updatedEvent","deleteReminder","sortedEvents","sort","a","b","nextEvents","pastEvents","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","placeholder","required","selected","dateFormat","placeholderText","isClearable","toLocaleDateString","onClick","length","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/gonch/OneDrive/Desktop/deseosdedos/src/components/Reminders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { database, auth } from '../services/firebase';\r\nimport { ref, onValue, push, remove, update } from 'firebase/database';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { FaCheck, FaTimes, FaUndo, FaCalendarAlt, FaHourglassHalf, FaCheckCircle } from 'react-icons/fa';\r\nimport IOSAlert from './IOSAlert';\r\n\r\nconst Reminders = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [completedEvents, setCompletedEvents] = useState([]);\r\n    const [deletedEvents, setDeletedEvents] = useState([]);\r\n    const [newReminder, setNewReminder] = useState({ title: '', date: null, completed: false });\r\n    const [sharedListId, setSharedListId] = useState(null);\r\n    const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n    const [alertConfig, setAlertConfig] = useState({ title: '', message: '', onConfirm: () => {} });\r\n\r\n    useEffect(() => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            const sharedListsRef = ref(database, 'sharedLists');\r\n            const unsubscribe = onValue(sharedListsRef, (snapshot) => {\r\n                const data = snapshot.val();\r\n                if (data) {\r\n                    const sharedList = Object.entries(data).find(([_, value]) => \r\n                        value.accepted && value.owners.includes(currentUser.uid)\r\n                    );\r\n                    if (sharedList) {\r\n                        setSharedListId(sharedList[0]);\r\n                        loadSharedEvents(sharedList[0]);\r\n                    } else {\r\n                        loadPersonalEvents(currentUser.uid);\r\n                    }\r\n                } else {\r\n                    loadPersonalEvents(currentUser.uid);\r\n                }\r\n            });\r\n    \r\n            return () => unsubscribe();\r\n        }\r\n    }, []);\r\n    \r\n    const loadPersonalEvents = (userId) => {\r\n        const eventsRef = ref(database, `users/${userId}/events`);\r\n        onValue(eventsRef, (snapshot) => {\r\n            const data = snapshot.val();\r\n            if (data) {\r\n                const eventList = Object.entries(data).map(([id, event]) => ({\r\n                    ...event,\r\n                    id,\r\n                    owner: userId\r\n                }));\r\n                setEvents(eventList.filter(event => !event.completed));\r\n                setCompletedEvents(eventList.filter(event => event.completed));\r\n            } else {\r\n                setEvents([]);\r\n                setCompletedEvents([]);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadSharedEvents = (listId) => {\r\n        const sharedEventsRef = ref(database, `sharedLists/${listId}/events`);\r\n        onValue(sharedEventsRef, (snapshot) => {\r\n            const data = snapshot.val();\r\n            if (data) {\r\n                const eventList = Object.entries(data).flatMap(([ownerId, ownerEvents]) =>\r\n                    Object.entries(ownerEvents).map(([id, event]) => ({\r\n                        ...event,\r\n                        id,\r\n                        owner: ownerId\r\n                    }))\r\n                );\r\n                setEvents(eventList.filter(event => !event.completed));\r\n                setCompletedEvents(eventList.filter(event => event.completed));\r\n            } else {\r\n                setEvents([]);\r\n                setCompletedEvents([]);\r\n            }\r\n        });\r\n    };\r\n\r\n    const addReminder = (e) => {\r\n        e.preventDefault();\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            const newEvent = {\r\n                ...newReminder,\r\n                id: Math.random().toString(36).substr(2, 9),\r\n                owner: currentUser.uid,\r\n                date: newReminder.date.toISOString(),\r\n                completed: false\r\n            };\r\n            \r\n            const eventRef = sharedListId\r\n                ? ref(database, `sharedLists/${sharedListId}/events/${currentUser.uid}`)\r\n                : ref(database, `users/${currentUser.uid}/events`);\r\n            \r\n            push(eventRef, newEvent);\r\n            setNewReminder({ title: '', date: new Date(), completed: false });\r\n        }\r\n    };\r\n\r\n    const toggleCompleted = (event) => {\r\n        const action = event.completed ? \"desmarcar\" : \"marcar como completado\";\r\n        setAlertConfig({\r\n            title: `${action.charAt(0).toUpperCase() + action.slice(1)} recordatorio`,\r\n            message: `¿Estás seguro que quieres ${action} este recordatorio?`,\r\n            onConfirm: () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    const eventRef = sharedListId\r\n                        ? ref(database, `sharedLists/${sharedListId}/events/${event.owner}/${event.id}`)\r\n                        : ref(database, `users/${currentUser.uid}/events/${event.id}`);\r\n                    \r\n                    const updatedEvent = { ...event, completed: !event.completed };\r\n                    update(eventRef, updatedEvent);\r\n                }\r\n                setIsAlertOpen(false);\r\n            }\r\n        });\r\n        setIsAlertOpen(true);\r\n    };\r\n\r\n    const deleteReminder = (event) => {\r\n        setAlertConfig({\r\n            title: \"Eliminar recordatorio\",\r\n            message: \"¿Estás seguro que quieres eliminar este recordatorio?\",\r\n            onConfirm: () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    const eventRef = sharedListId\r\n                        ? ref(database, `sharedLists/${sharedListId}/events/${event.owner}/${event.id}`)\r\n                        : ref(database, `users/${currentUser.uid}/events/${event.id}`);\r\n                    \r\n                    remove(eventRef);\r\n                }\r\n                setIsAlertOpen(false);\r\n            }\r\n        });\r\n        setIsAlertOpen(true);\r\n    };\r\n\r\n    const sortedEvents = events.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n    const nextEvents = sortedEvents.filter(event => !event.completed && new Date(event.date) >= new Date());\r\n    const pastEvents = sortedEvents.filter(event => !event.completed && new Date(event.date) < new Date());\r\n    \r\n    return (\r\n        <div className=\"ios-page\">\r\n            <h2 className=\"ios-page-title\">Recordatorios</h2>\r\n            <form onSubmit={addReminder} className=\"ios-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newReminder.title}\r\n                    onChange={(e) => setNewReminder({...newReminder, title: e.target.value})}\r\n                    placeholder=\"Título del recordatorio\"\r\n                    className=\"ios-input\"\r\n                    required\r\n                />\r\n                <DatePicker\r\n                    selected={newReminder.date}\r\n                    onChange={(date) => setNewReminder({...newReminder, date})}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    className=\"ios-datepicker\"\r\n                    placeholderText=\"Seleccionar fecha\"\r\n                    isClearable\r\n                />\r\n                <button type=\"submit\" className=\"ios-button\">Agregar Recordatorio</button>\r\n            </form>\r\n            <div className=\"ios-section\">\r\n                <ul className=\"ios-list\">\r\n                    {nextEvents.map((event) => (\r\n                        <li key={event.id} className=\"ios-list-item\">\r\n                            <div className=\"ios-list-item-content\">\r\n                                <div className=\"ios-list-item-title\">{event.title}</div>\r\n                                <div className=\"ios-list-item-details\">\r\n                                    <span className=\"ios-list-item-date\">{new Date(event.date).toLocaleDateString()}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"ios-list-item-actions\">\r\n                                <button onClick={() => toggleCompleted(event)} className=\"ios-button-icon ios-button-complete\" aria-label=\"Completar\">\r\n                                    <FaCheck />\r\n                                </button>\r\n                                <button onClick={() => deleteReminder(event)} className=\"ios-button-icon ios-button-delete\" aria-label=\"Eliminar\">\r\n                                    <FaTimes />\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            {pastEvents.length > 0 && (\r\n                <div className=\"ios-section\">\r\n                    <h3 className=\"ios-section-title\">\r\n                        Próximos Recordatorios <FaCalendarAlt className=\"ios-section-icon\" />\r\n                    </h3>\r\n                    <ul className=\"ios-list\">\r\n                        {pastEvents.map((event) => (\r\n                            <li key={event.id} className=\"ios-list-item\">\r\n                                <div className=\"ios-list-item-content\">\r\n                                    <div className=\"ios-list-item-title\">{event.title}</div>\r\n                                    <div className=\"ios-list-item-details\">\r\n                                        <span className=\"ios-list-item-date\">{new Date(event.date).toLocaleDateString()}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ios-list-item-actions\">\r\n                                    <button onClick={() => toggleCompleted(event)} className=\"ios-button-icon ios-button-complete\" aria-label=\"Completar\">\r\n                                        <FaCheck />\r\n                                    </button>\r\n                                    <button onClick={() => deleteReminder(event)} className=\"ios-button-icon ios-button-delete\" aria-label=\"Eliminar\">\r\n                                        <FaTimes />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n            {completedEvents.length > 0 && (\r\n                <div className=\"ios-section\">\r\n                    <h3 className=\"ios-section-title\">\r\n                        Recordatorios Completados <FaCheckCircle className=\"ios-section-icon\" />\r\n                    </h3>\r\n                    <ul className=\"ios-list\">\r\n                        {completedEvents.map((event) => (\r\n                            <li key={event.id} className=\"ios-list-item\">\r\n                                <div className=\"ios-list-item-content\">\r\n                                    <div className=\"ios-list-item-title\">{event.title}</div>\r\n                                    <div className=\"ios-list-item-details\">\r\n                                        <span className=\"ios-list-item-date\">{new Date(event.date).toLocaleDateString()}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ios-list-item-actions\">\r\n                                    <button onClick={() => toggleCompleted(event)} className=\"ios-button-icon ios-button-undo\" aria-label=\"Desmarcar\">\r\n                                        <FaUndo />\r\n                                    </button>\r\n                                    <button onClick={() => deleteReminder(event)} className=\"ios-button-icon ios-button-delete\" aria-label=\"Eliminar\">\r\n                                        <FaTimes />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n            <IOSAlert\r\n                isOpen={isAlertOpen}\r\n                onClose={() => setIsAlertOpen(false)}\r\n                onConfirm={alertConfig.onConfirm}\r\n                title={alertConfig.title}\r\n                message={alertConfig.message}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Reminders;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,IAAI,QAAQ,sBAAsB;AACrD,SAASC,GAAG,EAAEC,OAAO,EAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM,QAAQ,mBAAmB;AACtE,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AACnD,SAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,aAAa,EAAEC,eAAe,EAAEC,aAAa,QAAQ,gBAAgB;AACxG,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC;IAAE6B,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAM,CAAC,CAAC;EAC3F,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACoC,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAAC;IAAE6B,KAAK,EAAE,EAAE;IAAES,OAAO,EAAE,EAAE;IAAEC,SAAS,EAAEA,CAAA,KAAM,CAAC;EAAE,CAAC,CAAC;EAE/FtC,SAAS,CAAC,MAAM;IACZ,MAAMuC,WAAW,GAAGrC,IAAI,CAACqC,WAAW;IACpC,IAAIA,WAAW,EAAE;MACb,MAAMC,cAAc,GAAGrC,GAAG,CAACF,QAAQ,EAAE,aAAa,CAAC;MACnD,MAAMwC,WAAW,GAAGrC,OAAO,CAACoC,cAAc,EAAGE,QAAQ,IAAK;QACtD,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;QAC3B,IAAID,IAAI,EAAE;UACN,MAAME,UAAU,GAAGC,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,CAACK,IAAI,CAAC,CAAC,CAACC,CAAC,EAAEC,KAAK,CAAC,KACpDA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACE,MAAM,CAACC,QAAQ,CAACd,WAAW,CAACe,GAAG,CAC3D,CAAC;UACD,IAAIT,UAAU,EAAE;YACZb,eAAe,CAACa,UAAU,CAAC,CAAC,CAAC,CAAC;YAC9BU,gBAAgB,CAACV,UAAU,CAAC,CAAC,CAAC,CAAC;UACnC,CAAC,MAAM;YACHW,kBAAkB,CAACjB,WAAW,CAACe,GAAG,CAAC;UACvC;QACJ,CAAC,MAAM;UACHE,kBAAkB,CAACjB,WAAW,CAACe,GAAG,CAAC;QACvC;MACJ,CAAC,CAAC;MAEF,OAAO,MAAMb,WAAW,CAAC,CAAC;IAC9B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,kBAAkB,GAAIC,MAAM,IAAK;IACnC,MAAMC,SAAS,GAAGvD,GAAG,CAACF,QAAQ,EAAE,SAASwD,MAAM,SAAS,CAAC;IACzDrD,OAAO,CAACsD,SAAS,EAAGhB,QAAQ,IAAK;MAC7B,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;MAC3B,IAAID,IAAI,EAAE;QACN,MAAMgB,SAAS,GAAGb,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,CAACiB,GAAG,CAAC,CAAC,CAACC,EAAE,EAAEC,KAAK,CAAC,MAAM;UACzD,GAAGA,KAAK;UACRD,EAAE;UACFE,KAAK,EAAEN;QACX,CAAC,CAAC,CAAC;QACHpC,SAAS,CAACsC,SAAS,CAACK,MAAM,CAACF,KAAK,IAAI,CAACA,KAAK,CAAChC,SAAS,CAAC,CAAC;QACtDP,kBAAkB,CAACoC,SAAS,CAACK,MAAM,CAACF,KAAK,IAAIA,KAAK,CAAChC,SAAS,CAAC,CAAC;MAClE,CAAC,MAAM;QACHT,SAAS,CAAC,EAAE,CAAC;QACbE,kBAAkB,CAAC,EAAE,CAAC;MAC1B;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMgC,gBAAgB,GAAIU,MAAM,IAAK;IACjC,MAAMC,eAAe,GAAG/D,GAAG,CAACF,QAAQ,EAAE,eAAegE,MAAM,SAAS,CAAC;IACrE7D,OAAO,CAAC8D,eAAe,EAAGxB,QAAQ,IAAK;MACnC,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;MAC3B,IAAID,IAAI,EAAE;QACN,MAAMgB,SAAS,GAAGb,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,CAACwB,OAAO,CAAC,CAAC,CAACC,OAAO,EAAEC,WAAW,CAAC,KAClEvB,MAAM,CAACC,OAAO,CAACsB,WAAW,CAAC,CAACT,GAAG,CAAC,CAAC,CAACC,EAAE,EAAEC,KAAK,CAAC,MAAM;UAC9C,GAAGA,KAAK;UACRD,EAAE;UACFE,KAAK,EAAEK;QACX,CAAC,CAAC,CACN,CAAC;QACD/C,SAAS,CAACsC,SAAS,CAACK,MAAM,CAACF,KAAK,IAAI,CAACA,KAAK,CAAChC,SAAS,CAAC,CAAC;QACtDP,kBAAkB,CAACoC,SAAS,CAACK,MAAM,CAACF,KAAK,IAAIA,KAAK,CAAChC,SAAS,CAAC,CAAC;MAClE,CAAC,MAAM;QACHT,SAAS,CAAC,EAAE,CAAC;QACbE,kBAAkB,CAAC,EAAE,CAAC;MAC1B;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAM+C,WAAW,GAAIC,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMjC,WAAW,GAAGrC,IAAI,CAACqC,WAAW;IACpC,IAAIA,WAAW,EAAE;MACb,MAAMkC,QAAQ,GAAG;QACb,GAAG/C,WAAW;QACdmC,EAAE,EAAEa,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;QAC3Cd,KAAK,EAAExB,WAAW,CAACe,GAAG;QACtBzB,IAAI,EAAEH,WAAW,CAACG,IAAI,CAACiD,WAAW,CAAC,CAAC;QACpChD,SAAS,EAAE;MACf,CAAC;MAED,MAAMiD,QAAQ,GAAGhD,YAAY,GACvB5B,GAAG,CAACF,QAAQ,EAAE,eAAe8B,YAAY,WAAWQ,WAAW,CAACe,GAAG,EAAE,CAAC,GACtEnD,GAAG,CAACF,QAAQ,EAAE,SAASsC,WAAW,CAACe,GAAG,SAAS,CAAC;MAEtDjD,IAAI,CAAC0E,QAAQ,EAAEN,QAAQ,CAAC;MACxB9C,cAAc,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,IAAImD,IAAI,CAAC,CAAC;QAAElD,SAAS,EAAE;MAAM,CAAC,CAAC;IACrE;EACJ,CAAC;EAED,MAAMmD,eAAe,GAAInB,KAAK,IAAK;IAC/B,MAAMoB,MAAM,GAAGpB,KAAK,CAAChC,SAAS,GAAG,WAAW,GAAG,wBAAwB;IACvEM,cAAc,CAAC;MACXR,KAAK,EAAE,GAAGsD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC,eAAe;MACzEhD,OAAO,EAAE,6BAA6B6C,MAAM,qBAAqB;MACjE5C,SAAS,EAAEA,CAAA,KAAM;QACb,MAAMC,WAAW,GAAGrC,IAAI,CAACqC,WAAW;QACpC,IAAIA,WAAW,EAAE;UACb,MAAMwC,QAAQ,GAAGhD,YAAY,GACvB5B,GAAG,CAACF,QAAQ,EAAE,eAAe8B,YAAY,WAAW+B,KAAK,CAACC,KAAK,IAAID,KAAK,CAACD,EAAE,EAAE,CAAC,GAC9E1D,GAAG,CAACF,QAAQ,EAAE,SAASsC,WAAW,CAACe,GAAG,WAAWQ,KAAK,CAACD,EAAE,EAAE,CAAC;UAElE,MAAMyB,YAAY,GAAG;YAAE,GAAGxB,KAAK;YAAEhC,SAAS,EAAE,CAACgC,KAAK,CAAChC;UAAU,CAAC;UAC9DvB,MAAM,CAACwE,QAAQ,EAAEO,YAAY,CAAC;QAClC;QACApD,cAAc,CAAC,KAAK,CAAC;MACzB;IACJ,CAAC,CAAC;IACFA,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMqD,cAAc,GAAIzB,KAAK,IAAK;IAC9B1B,cAAc,CAAC;MACXR,KAAK,EAAE,uBAAuB;MAC9BS,OAAO,EAAE,uDAAuD;MAChEC,SAAS,EAAEA,CAAA,KAAM;QACb,MAAMC,WAAW,GAAGrC,IAAI,CAACqC,WAAW;QACpC,IAAIA,WAAW,EAAE;UACb,MAAMwC,QAAQ,GAAGhD,YAAY,GACvB5B,GAAG,CAACF,QAAQ,EAAE,eAAe8B,YAAY,WAAW+B,KAAK,CAACC,KAAK,IAAID,KAAK,CAACD,EAAE,EAAE,CAAC,GAC9E1D,GAAG,CAACF,QAAQ,EAAE,SAASsC,WAAW,CAACe,GAAG,WAAWQ,KAAK,CAACD,EAAE,EAAE,CAAC;UAElEvD,MAAM,CAACyE,QAAQ,CAAC;QACpB;QACA7C,cAAc,CAAC,KAAK,CAAC;MACzB;IACJ,CAAC,CAAC;IACFA,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMsD,YAAY,GAAGpE,MAAM,CAACqE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIX,IAAI,CAACU,CAAC,CAAC7D,IAAI,CAAC,GAAG,IAAImD,IAAI,CAACW,CAAC,CAAC9D,IAAI,CAAC,CAAC;EAC/E,MAAM+D,UAAU,GAAGJ,YAAY,CAACxB,MAAM,CAACF,KAAK,IAAI,CAACA,KAAK,CAAChC,SAAS,IAAI,IAAIkD,IAAI,CAAClB,KAAK,CAACjC,IAAI,CAAC,IAAI,IAAImD,IAAI,CAAC,CAAC,CAAC;EACvG,MAAMa,UAAU,GAAGL,YAAY,CAACxB,MAAM,CAACF,KAAK,IAAI,CAACA,KAAK,CAAChC,SAAS,IAAI,IAAIkD,IAAI,CAAClB,KAAK,CAACjC,IAAI,CAAC,GAAG,IAAImD,IAAI,CAAC,CAAC,CAAC;EAEtG,oBACI/D,OAAA;IAAK6E,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrB9E,OAAA;MAAI6E,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDlF,OAAA;MAAMmF,QAAQ,EAAE9B,WAAY;MAACwB,SAAS,EAAC,UAAU;MAAAC,QAAA,gBAC7C9E,OAAA;QACIoF,IAAI,EAAC,MAAM;QACXnD,KAAK,EAAExB,WAAW,CAACE,KAAM;QACzB0E,QAAQ,EAAG/B,CAAC,IAAK5C,cAAc,CAAC;UAAC,GAAGD,WAAW;UAAEE,KAAK,EAAE2C,CAAC,CAACgC,MAAM,CAACrD;QAAK,CAAC,CAAE;QACzEsD,WAAW,EAAC,4BAAyB;QACrCV,SAAS,EAAC,WAAW;QACrBW,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFlF,OAAA,CAACT,UAAU;QACPkG,QAAQ,EAAEhF,WAAW,CAACG,IAAK;QAC3ByE,QAAQ,EAAGzE,IAAI,IAAKF,cAAc,CAAC;UAAC,GAAGD,WAAW;UAAEG;QAAI,CAAC,CAAE;QAC3D8E,UAAU,EAAC,YAAY;QACvBb,SAAS,EAAC,gBAAgB;QAC1Bc,eAAe,EAAC,mBAAmB;QACnCC,WAAW;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACFlF,OAAA;QAAQoF,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC,eACPlF,OAAA;MAAK6E,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxB9E,OAAA;QAAI6E,SAAS,EAAC,UAAU;QAAAC,QAAA,EACnBH,UAAU,CAAChC,GAAG,CAAEE,KAAK,iBAClB7C,OAAA;UAAmB6E,SAAS,EAAC,eAAe;UAAAC,QAAA,gBACxC9E,OAAA;YAAK6E,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBAClC9E,OAAA;cAAK6E,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAAEjC,KAAK,CAAClC;YAAK;cAAAoE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxDlF,OAAA;cAAK6E,SAAS,EAAC,uBAAuB;cAAAC,QAAA,eAClC9E,OAAA;gBAAM6E,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAE,IAAIf,IAAI,CAAClB,KAAK,CAACjC,IAAI,CAAC,CAACiF,kBAAkB,CAAC;cAAC;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNlF,OAAA;YAAK6E,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBAClC9E,OAAA;cAAQ8F,OAAO,EAAEA,CAAA,KAAM9B,eAAe,CAACnB,KAAK,CAAE;cAACgC,SAAS,EAAC,qCAAqC;cAAC,cAAW,WAAW;cAAAC,QAAA,eACjH9E,OAAA,CAACR,OAAO;gBAAAuF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,eACTlF,OAAA;cAAQ8F,OAAO,EAAEA,CAAA,KAAMxB,cAAc,CAACzB,KAAK,CAAE;cAACgC,SAAS,EAAC,mCAAmC;cAAC,cAAW,UAAU;cAAAC,QAAA,eAC7G9E,OAAA,CAACP,OAAO;gBAAAsF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA,GAdDrC,KAAK,CAACD,EAAE;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeb,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACLN,UAAU,CAACmB,MAAM,GAAG,CAAC,iBAClB/F,OAAA;MAAK6E,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxB9E,OAAA;QAAI6E,SAAS,EAAC,mBAAmB;QAAAC,QAAA,GAAC,4BACP,eAAA9E,OAAA,CAACL,aAAa;UAACkF,SAAS,EAAC;QAAkB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eACLlF,OAAA;QAAI6E,SAAS,EAAC,UAAU;QAAAC,QAAA,EACnBF,UAAU,CAACjC,GAAG,CAAEE,KAAK,iBAClB7C,OAAA;UAAmB6E,SAAS,EAAC,eAAe;UAAAC,QAAA,gBACxC9E,OAAA;YAAK6E,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBAClC9E,OAAA;cAAK6E,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAAEjC,KAAK,CAAClC;YAAK;cAAAoE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxDlF,OAAA;cAAK6E,SAAS,EAAC,uBAAuB;cAAAC,QAAA,eAClC9E,OAAA;gBAAM6E,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAE,IAAIf,IAAI,CAAClB,KAAK,CAACjC,IAAI,CAAC,CAACiF,kBAAkB,CAAC;cAAC;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNlF,OAAA;YAAK6E,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBAClC9E,OAAA;cAAQ8F,OAAO,EAAEA,CAAA,KAAM9B,eAAe,CAACnB,KAAK,CAAE;cAACgC,SAAS,EAAC,qCAAqC;cAAC,cAAW,WAAW;cAAAC,QAAA,eACjH9E,OAAA,CAACR,OAAO;gBAAAuF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,eACTlF,OAAA;cAAQ8F,OAAO,EAAEA,CAAA,KAAMxB,cAAc,CAACzB,KAAK,CAAE;cAACgC,SAAS,EAAC,mCAAmC;cAAC,cAAW,UAAU;cAAAC,QAAA,eAC7G9E,OAAA,CAACP,OAAO;gBAAAsF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA,GAdDrC,KAAK,CAACD,EAAE;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeb,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACR,EACA7E,eAAe,CAAC0F,MAAM,GAAG,CAAC,iBACvB/F,OAAA;MAAK6E,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxB9E,OAAA;QAAI6E,SAAS,EAAC,mBAAmB;QAAAC,QAAA,GAAC,4BACJ,eAAA9E,OAAA,CAACH,aAAa;UAACgF,SAAS,EAAC;QAAkB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eACLlF,OAAA;QAAI6E,SAAS,EAAC,UAAU;QAAAC,QAAA,EACnBzE,eAAe,CAACsC,GAAG,CAAEE,KAAK,iBACvB7C,OAAA;UAAmB6E,SAAS,EAAC,eAAe;UAAAC,QAAA,gBACxC9E,OAAA;YAAK6E,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBAClC9E,OAAA;cAAK6E,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAAEjC,KAAK,CAAClC;YAAK;cAAAoE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxDlF,OAAA;cAAK6E,SAAS,EAAC,uBAAuB;cAAAC,QAAA,eAClC9E,OAAA;gBAAM6E,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAE,IAAIf,IAAI,CAAClB,KAAK,CAACjC,IAAI,CAAC,CAACiF,kBAAkB,CAAC;cAAC;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNlF,OAAA;YAAK6E,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBAClC9E,OAAA;cAAQ8F,OAAO,EAAEA,CAAA,KAAM9B,eAAe,CAACnB,KAAK,CAAE;cAACgC,SAAS,EAAC,iCAAiC;cAAC,cAAW,WAAW;cAAAC,QAAA,eAC7G9E,OAAA,CAACN,MAAM;gBAAAqF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eACTlF,OAAA;cAAQ8F,OAAO,EAAEA,CAAA,KAAMxB,cAAc,CAACzB,KAAK,CAAE;cAACgC,SAAS,EAAC,mCAAmC;cAAC,cAAW,UAAU;cAAAC,QAAA,eAC7G9E,OAAA,CAACP,OAAO;gBAAAsF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA,GAdDrC,KAAK,CAACD,EAAE;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeb,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACR,eACDlF,OAAA,CAACF,QAAQ;MACLkG,MAAM,EAAEhF,WAAY;MACpBiF,OAAO,EAAEA,CAAA,KAAMhF,cAAc,CAAC,KAAK,CAAE;MACrCI,SAAS,EAAEH,WAAW,CAACG,SAAU;MACjCV,KAAK,EAAEO,WAAW,CAACP,KAAM;MACzBS,OAAO,EAAEF,WAAW,CAACE;IAAQ;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAChF,EAAA,CAtPID,SAAS;AAAAiG,EAAA,GAATjG,SAAS;AAwPf,eAAeA,SAAS;AAAC,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}