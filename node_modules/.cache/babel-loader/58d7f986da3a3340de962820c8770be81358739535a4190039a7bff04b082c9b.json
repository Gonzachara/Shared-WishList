{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonch\\\\OneDrive\\\\Desktop\\\\deseosdedos\\\\src\\\\components\\\\Collaborate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { database, auth } from '../services/firebase';\nimport { ref, push, set, onValue, get, update, remove } from 'firebase/database';\nimport IOSAlert from './IOSAlert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Collaborate = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [invitations, setInvitations] = useState([]);\n  const [sharedLists, setSharedLists] = useState([]);\n  const [hasWishList, setHasWishList] = useState(false);\n  const [alertConfig, setAlertConfig] = useState({\n    isOpen: false,\n    title: '',\n    message: '',\n    onConfirm: null\n  });\n  useEffect(() => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      // Verificar si el usuario tiene una lista de deseos\n      const userRef = ref(database, `users/${currentUser.uid}/wishlist`);\n      get(userRef).then(snapshot => {\n        setHasWishList(snapshot.exists() && snapshot.val() !== null);\n      });\n\n      // Obtener invitaciones y listas compartidas\n      const sharedListsRef = ref(database, 'sharedLists');\n      onValue(sharedListsRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          const invitationList = [];\n          const sharedListArray = [];\n          Object.entries(data).forEach(([key, value]) => {\n            if (value.invitedEmail === currentUser.email && !value.accepted) {\n              invitationList.push({\n                id: key,\n                ...value\n              });\n            } else if (value.owners.includes(currentUser.uid) || value.invitedEmail === currentUser.email && value.accepted) {\n              sharedListArray.push({\n                id: key,\n                ...value\n              });\n            }\n          });\n          setInvitations(invitationList);\n          setSharedLists(sharedListArray);\n        }\n      });\n\n      // Obtener nombres de usuarios\n      const userPromises = sharedListArray.map(list => Promise.all(list.owners.map(uid => get(ref(database, `users/${uid}/displayName`)).then(snapshot => snapshot.val() || uid))));\n      Promise.all(userPromises).then(userNamesArrays => {\n        setSharedLists(sharedListArray.map((list, index) => ({\n          ...list,\n          ownerNames: userNamesArrays[index]\n        })));\n      });\n    }\n  }, []);\n  const showAlert = (title, message, onConfirm) => {\n    setAlertConfig({\n      isOpen: true,\n      title,\n      message,\n      onConfirm\n    });\n  };\n  const closeAlert = () => {\n    setAlertConfig({\n      ...alertConfig,\n      isOpen: false\n    });\n  };\n  const inviteCollaborator = () => {\n    showAlert(\"Enviar invitación\", `¿Estás seguro que quieres invitar a ${email}?`, async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        try {\n          const userRef = ref(database, `users/${currentUser.uid}/events`);\n          let userEvents = await get(userRef);\n          const newListRef = push(ref(database, 'sharedLists'));\n          await set(newListRef, {\n            owners: [currentUser.uid],\n            invitedEmail: email,\n            accepted: false,\n            events: {\n              [currentUser.uid]: userEvents.val() || {}\n            }\n          });\n          alert('Invitación enviada a ' + email);\n          setEmail('');\n        } catch (error) {\n          console.error('Error al enviar invitación:', error);\n          alert('Error al enviar la invitación. Por favor, intenta de nuevo.');\n        }\n      } else {\n        alert('Debes estar autenticado para enviar invitaciones.');\n      }\n      closeAlert();\n    });\n  };\n  const acceptInvitation = invitationId => {\n    showAlert(\"Aceptar invitación\", \"¿Estás seguro que quieres aceptar esta invitación?\", async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        try {\n          const invitationRef = ref(database, `sharedLists/${invitationId}`);\n          const snapshot = await get(invitationRef);\n          const invitationData = snapshot.val();\n          if (invitationData && invitationData.invitedEmail === currentUser.email) {\n            const userEventsRef = ref(database, `users/${currentUser.uid}/events`);\n            const userEventsSnapshot = await get(userEventsRef);\n            const currentUserEvents = userEventsSnapshot.val() || {};\n\n            // Crear un objeto de actualización válido\n            const updateData = {\n              accepted: true,\n              owners: [...invitationData.owners, currentUser.uid]\n            };\n\n            // Añadir los eventos del usuario actual a la lista compartida\n            Object.keys(currentUserEvents).forEach(eventId => {\n              updateData[`events/${currentUser.uid}/${eventId}`] = currentUserEvents[eventId];\n            });\n            await update(invitationRef, updateData);\n            alert('Invitación aceptada');\n          } else {\n            throw new Error('No tienes permiso para aceptar esta invitación');\n          }\n        } catch (error) {\n          console.error('Error al aceptar la invitación:', error);\n          alert('Error al aceptar la invitación. Por favor, intenta de nuevo.');\n        }\n      }\n      closeAlert();\n    });\n  };\n  const leaveSharedList = listId => {\n    showAlert(\"Salir de la lista compartida\", \"¿Estás seguro que quieres salir de esta lista compartida?\", async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        try {\n          const listRef = ref(database, `sharedLists/${listId}`);\n          const snapshot = await get(listRef);\n          const listData = snapshot.val();\n          if (listData && listData.owners.includes(currentUser.uid)) {\n            const updatedOwners = listData.owners.filter(uid => uid !== currentUser.uid);\n            if (updatedOwners.length > 0) {\n              // Actualizar la lista sin el usuario actual\n              await update(listRef, {\n                owners: updatedOwners\n              });\n              // Eliminar los eventos del usuario de la lista compartida\n              if (listData.events && listData.events[currentUser.uid]) {\n                await remove(ref(database, `sharedLists/${listId}/events/${currentUser.uid}`));\n              }\n            } else {\n              // Si no quedan propietarios, eliminar la lista compartida\n              await remove(listRef);\n            }\n            alert('Has salido de la lista compartida');\n          } else {\n            throw new Error('No tienes permiso para salir de esta lista');\n          }\n        } catch (error) {\n          console.error('Error al salir de la lista compartida:', error);\n          alert('Error al salir de la lista compartida. Por favor, intenta de nuevo.');\n        }\n      }\n      closeAlert();\n    });\n  };\n  const handleViewList = listId => {\n    // Implementa la navegación a la lista compartida\n    console.log(`Ver lista compartida con ID: ${listId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"Colaborar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invite-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email del colaborador\",\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inviteCollaborator,\n        className: \"button\",\n        children: \"Enviar Invitaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invitations-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Invitaciones pendientes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), invitations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-invitations\",\n        children: \"No hay invitaciones pendientes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"invitation-list\",\n        children: invitations.map(invitation => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"invitation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Invitaci\\xF3n recibida de: \", invitation.owners[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => acceptInvitation(invitation.id),\n            className: \"button\",\n            children: \"Aceptar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 33\n          }, this)]\n        }, invitation.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shared-lists-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Listas compartidas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), sharedLists.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-shared-lists\",\n        children: \"No hay listas compartidas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"shared-list\",\n        children: sharedLists.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"shared-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shared-list-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"shared-list-title\",\n              children: \"Lista compartida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"shared-list-collaborators\",\n              children: [\"Colaboradores: \", list.owners.filter(owner => owner !== auth.currentUser.uid).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shared-list-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"view-list-button\",\n              onClick: () => handleViewList(list.id),\n              children: \"Ver lista\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"leave-list-button\",\n              onClick: () => leaveSharedList(list.id),\n              children: \"Salir de la lista\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }, this)]\n        }, list.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IOSAlert, {\n      isOpen: alertConfig.isOpen,\n      onClose: closeAlert,\n      onConfirm: alertConfig.onConfirm,\n      title: alertConfig.title,\n      message: alertConfig.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n_s(Collaborate, \"0Uqj7s8x6ivVnVyJ8jwE5uXWPZs=\");\n_c = Collaborate;\nexport default Collaborate;\nvar _c;\n$RefreshReg$(_c, \"Collaborate\");","map":{"version":3,"names":["React","useState","useEffect","database","auth","ref","push","set","onValue","get","update","remove","IOSAlert","jsxDEV","_jsxDEV","Collaborate","_s","email","setEmail","invitations","setInvitations","sharedLists","setSharedLists","hasWishList","setHasWishList","alertConfig","setAlertConfig","isOpen","title","message","onConfirm","currentUser","userRef","uid","then","snapshot","exists","val","sharedListsRef","data","invitationList","sharedListArray","Object","entries","forEach","key","value","invitedEmail","accepted","id","owners","includes","userPromises","map","list","Promise","all","userNamesArrays","index","ownerNames","showAlert","closeAlert","inviteCollaborator","userEvents","newListRef","events","alert","error","console","acceptInvitation","invitationId","invitationRef","invitationData","userEventsRef","userEventsSnapshot","currentUserEvents","updateData","keys","eventId","Error","leaveSharedList","listId","listRef","listData","updatedOwners","filter","length","handleViewList","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","invitation","owner","join","onClose","_c","$RefreshReg$"],"sources":["C:/Users/gonch/OneDrive/Desktop/deseosdedos/src/components/Collaborate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { database, auth } from '../services/firebase';\r\nimport { ref, push, set, onValue, get, update, remove } from 'firebase/database';\r\nimport IOSAlert from './IOSAlert';\r\n\r\nconst Collaborate = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [invitations, setInvitations] = useState([]);\r\n    const [sharedLists, setSharedLists] = useState([]);\r\n    const [hasWishList, setHasWishList] = useState(false);\r\n    const [alertConfig, setAlertConfig] = useState({ isOpen: false, title: '', message: '', onConfirm: null });\r\n\r\n    useEffect(() => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            // Verificar si el usuario tiene una lista de deseos\r\n            const userRef = ref(database, `users/${currentUser.uid}/wishlist`);\r\n            get(userRef).then((snapshot) => {\r\n                setHasWishList(snapshot.exists() && snapshot.val() !== null);\r\n            });\r\n\r\n            // Obtener invitaciones y listas compartidas\r\n            const sharedListsRef = ref(database, 'sharedLists');\r\n            onValue(sharedListsRef, (snapshot) => {\r\n                const data = snapshot.val();\r\n                if (data) {\r\n                    const invitationList = [];\r\n                    const sharedListArray = [];\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        if (value.invitedEmail === currentUser.email && !value.accepted) {\r\n                            invitationList.push({ id: key, ...value });\r\n                        } else if (value.owners.includes(currentUser.uid) || (value.invitedEmail === currentUser.email && value.accepted)) {\r\n                            sharedListArray.push({ id: key, ...value });\r\n                        }\r\n                    });\r\n                    setInvitations(invitationList);\r\n                    setSharedLists(sharedListArray);\r\n                }\r\n            });\r\n\r\n            // Obtener nombres de usuarios\r\n            const userPromises = sharedListArray.map(list => \r\n                Promise.all(list.owners.map(uid => \r\n                    get(ref(database, `users/${uid}/displayName`))\r\n                    .then(snapshot => snapshot.val() || uid)\r\n                ))\r\n            );\r\n\r\n            Promise.all(userPromises).then(userNamesArrays => {\r\n                setSharedLists(sharedListArray.map((list, index) => ({\r\n                    ...list,\r\n                    ownerNames: userNamesArrays[index]\r\n                })));\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const showAlert = (title, message, onConfirm) => {\r\n        setAlertConfig({ isOpen: true, title, message, onConfirm });\r\n    };\r\n\r\n    const closeAlert = () => {\r\n        setAlertConfig({ ...alertConfig, isOpen: false });\r\n    };\r\n\r\n    const inviteCollaborator = () => {\r\n        showAlert(\r\n            \"Enviar invitación\",\r\n            `¿Estás seguro que quieres invitar a ${email}?`,\r\n            async () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    try {\r\n                        const userRef = ref(database, `users/${currentUser.uid}/events`);\r\n                        let userEvents = await get(userRef);\r\n                        \r\n                        const newListRef = push(ref(database, 'sharedLists'));\r\n                        await set(newListRef, {\r\n                            owners: [currentUser.uid],\r\n                            invitedEmail: email,\r\n                            accepted: false,\r\n                            events: {\r\n                                [currentUser.uid]: userEvents.val() || {}\r\n                            }\r\n                        });\r\n                        alert('Invitación enviada a ' + email);\r\n                        setEmail('');\r\n                    } catch (error) {\r\n                        console.error('Error al enviar invitación:', error);\r\n                        alert('Error al enviar la invitación. Por favor, intenta de nuevo.');\r\n                    }\r\n                } else {\r\n                    alert('Debes estar autenticado para enviar invitaciones.');\r\n                }\r\n                closeAlert();\r\n            }\r\n        );\r\n    };\r\n\r\n    const acceptInvitation = (invitationId) => {\r\n        showAlert(\r\n            \"Aceptar invitación\",\r\n            \"¿Estás seguro que quieres aceptar esta invitación?\",\r\n            async () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    try {\r\n                        const invitationRef = ref(database, `sharedLists/${invitationId}`);\r\n                        const snapshot = await get(invitationRef);\r\n                        const invitationData = snapshot.val();\r\n                        if (invitationData && invitationData.invitedEmail === currentUser.email) {\r\n                            const userEventsRef = ref(database, `users/${currentUser.uid}/events`);\r\n                            const userEventsSnapshot = await get(userEventsRef);\r\n                            const currentUserEvents = userEventsSnapshot.val() || {};\r\n\r\n                            // Crear un objeto de actualización válido\r\n                            const updateData = {\r\n                                accepted: true,\r\n                                owners: [...invitationData.owners, currentUser.uid]\r\n                            };\r\n\r\n                            // Añadir los eventos del usuario actual a la lista compartida\r\n                            Object.keys(currentUserEvents).forEach(eventId => {\r\n                                updateData[`events/${currentUser.uid}/${eventId}`] = currentUserEvents[eventId];\r\n                            });\r\n\r\n                            await update(invitationRef, updateData);\r\n                            alert('Invitación aceptada');\r\n                        } else {\r\n                            throw new Error('No tienes permiso para aceptar esta invitación');\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error al aceptar la invitación:', error);\r\n                        alert('Error al aceptar la invitación. Por favor, intenta de nuevo.');\r\n                    }\r\n                }\r\n                closeAlert();\r\n            }\r\n        );\r\n    };\r\n\r\n    const leaveSharedList = (listId) => {\r\n        showAlert(\r\n            \"Salir de la lista compartida\",\r\n            \"¿Estás seguro que quieres salir de esta lista compartida?\",\r\n            async () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    try {\r\n                        const listRef = ref(database, `sharedLists/${listId}`);\r\n                        const snapshot = await get(listRef);\r\n                        const listData = snapshot.val();\r\n\r\n                        if (listData && listData.owners.includes(currentUser.uid)) {\r\n                            const updatedOwners = listData.owners.filter(uid => uid !== currentUser.uid);\r\n                            \r\n                            if (updatedOwners.length > 0) {\r\n                                // Actualizar la lista sin el usuario actual\r\n                                await update(listRef, {\r\n                                    owners: updatedOwners\r\n                                });\r\n                                // Eliminar los eventos del usuario de la lista compartida\r\n                                if (listData.events && listData.events[currentUser.uid]) {\r\n                                    await remove(ref(database, `sharedLists/${listId}/events/${currentUser.uid}`));\r\n                                }\r\n                            } else {\r\n                                // Si no quedan propietarios, eliminar la lista compartida\r\n                                await remove(listRef);\r\n                            }\r\n                            \r\n                            alert('Has salido de la lista compartida');\r\n                        } else {\r\n                            throw new Error('No tienes permiso para salir de esta lista');\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error al salir de la lista compartida:', error);\r\n                        alert('Error al salir de la lista compartida. Por favor, intenta de nuevo.');\r\n                    }\r\n                }\r\n                closeAlert();\r\n            }\r\n        );\r\n    };\r\n\r\n    const handleViewList = (listId) => {\r\n        // Implementa la navegación a la lista compartida\r\n        console.log(`Ver lista compartida con ID: ${listId}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h2 className=\"page-title\">Colaborar</h2>\r\n            \r\n            {/* Formulario de invitación */}\r\n            <div className=\"invite-form\">\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email del colaborador\"\r\n                    className=\"input\"\r\n                />\r\n                <button onClick={inviteCollaborator} className=\"button\">\r\n                    Enviar Invitación\r\n                </button>\r\n            </div>\r\n\r\n            {/* Sección de invitaciones pendientes */}\r\n            <div className=\"invitations-section\">\r\n                <h3 className=\"section-title\">Invitaciones pendientes:</h3>\r\n                {invitations.length === 0 ? (\r\n                    <p className=\"no-invitations\">No hay invitaciones pendientes.</p>\r\n                ) : (\r\n                    <ul className=\"invitation-list\">\r\n                        {invitations.map((invitation) => (\r\n                            <li key={invitation.id} className=\"invitation-item\">\r\n                                <span>Invitación recibida de: {invitation.owners[0]}</span>\r\n                                <button onClick={() => acceptInvitation(invitation.id)} className=\"button\">\r\n                                    Aceptar\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n\r\n            {/* Sección de listas compartidas */}\r\n            <div className=\"shared-lists-section\">\r\n                <h3 className=\"section-title\">Listas compartidas:</h3>\r\n                {sharedLists.length === 0 ? (\r\n                    <p className=\"no-shared-lists\">No hay listas compartidas.</p>\r\n                ) : (\r\n                    <ul className=\"shared-list\">\r\n                        {sharedLists.map((list) => (\r\n                            <li key={list.id} className=\"shared-list-item\">\r\n                                <div className=\"shared-list-info\">\r\n                                    <span className=\"shared-list-title\">Lista compartida</span>\r\n                                    <span className=\"shared-list-collaborators\">\r\n                                        Colaboradores: {list.owners.filter(owner => owner !== auth.currentUser.uid).join(', ')}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"shared-list-actions\">\r\n                                    <button className=\"view-list-button\" onClick={() => handleViewList(list.id)}>Ver lista</button>\r\n                                    <button className=\"leave-list-button\" onClick={() => leaveSharedList(list.id)}>Salir de la lista</button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n            \r\n            <IOSAlert\r\n                isOpen={alertConfig.isOpen}\r\n                onClose={closeAlert}\r\n                onConfirm={alertConfig.onConfirm}\r\n                title={alertConfig.title}\r\n                message={alertConfig.message}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Collaborate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}