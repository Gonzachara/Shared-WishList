{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonch\\\\OneDrive\\\\Desktop\\\\deseosdedos\\\\src\\\\components\\\\Collaborate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { database, auth } from '../services/firebase';\nimport { ref, push, set, onValue, get, update, remove } from 'firebase/database';\nimport IOSAlert from './IOSAlert';\nimport { FaEye, FaSignOutAlt, FaCheck, FaTimes } from 'react-icons/fa';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Collaborate = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [invitations, setInvitations] = useState([]);\n  const [sharedLists, setSharedLists] = useState([]);\n  const [hasWishList, setHasWishList] = useState(false);\n  const [alertConfig, setAlertConfig] = useState({\n    isOpen: false,\n    title: '',\n    message: '',\n    onConfirm: null\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      // Verificar si el usuario tiene una lista de deseos\n      const userRef = ref(database, `users/${currentUser.uid}/wishlist`);\n      get(userRef).then(snapshot => {\n        setHasWishList(snapshot.exists() && snapshot.val() !== null);\n      });\n\n      // Obtener invitaciones y listas compartidas\n      const sharedListsRef = ref(database, 'sharedLists');\n      onValue(sharedListsRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          const invitationList = [];\n          const sharedListArray = [];\n          Object.entries(data).forEach(([key, value]) => {\n            if (value.invitedEmail === currentUser.email && !value.accepted) {\n              invitationList.push({\n                id: key,\n                ...value\n              });\n            } else if (value.owners.includes(currentUser.uid) || value.invitedEmail === currentUser.email && value.accepted) {\n              sharedListArray.push({\n                id: key,\n                ...value\n              });\n            }\n          });\n          setInvitations(invitationList);\n\n          // Obtener nombres de usuarios\n          Promise.all(sharedListArray.map(async list => {\n            const ownerNames = await Promise.all(list.owners.map(async uid => {\n              try {\n                const userSnapshot = await get(ref(database, `users/${uid}`));\n                const userData = userSnapshot.val();\n                return userData && userData.displayName ? userData.displayName : userData && userData.email ? userData.email : uid;\n              } catch (error) {\n                console.error(`Error al obtener el nombre del usuario ${uid}:`, error);\n                return uid;\n              }\n            }));\n            return {\n              ...list,\n              ownerNames\n            };\n          })).then(updatedSharedLists => {\n            setSharedLists(updatedSharedLists);\n          });\n        } else {\n          setInvitations([]);\n          setSharedLists([]);\n        }\n      });\n    }\n  }, []);\n  const showAlert = (title, message, onConfirm) => {\n    setAlertConfig({\n      isOpen: true,\n      title,\n      message,\n      onConfirm\n    });\n  };\n  const closeAlert = () => {\n    setAlertConfig({\n      ...alertConfig,\n      isOpen: false\n    });\n  };\n  const inviteCollaborator = () => {\n    showAlert(\"Enviar invitación\", `¿Estás seguro que quieres invitar a ${email}?`, async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        try {\n          const userRef = ref(database, `users/${currentUser.uid}/events`);\n          let userEvents = await get(userRef);\n          const newListRef = push(ref(database, 'sharedLists'));\n          await set(newListRef, {\n            owners: [currentUser.uid],\n            invitedEmail: email,\n            accepted: false,\n            events: {\n              [currentUser.uid]: userEvents.val() || {}\n            }\n          });\n          alert('Invitación enviada a ' + email);\n          setEmail('');\n        } catch (error) {\n          console.error('Error al enviar invitación:', error);\n          alert('Error al enviar la invitación. Por favor, intenta de nuevo.');\n        }\n      } else {\n        alert('Debes estar autenticado para enviar invitaciones.');\n      }\n      closeAlert();\n    });\n  };\n  const acceptInvitation = invitationId => {\n    showAlert(\"Aceptar invitación\", \"¿Estás seguro que quieres aceptar esta invitación?\", async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        try {\n          const invitationRef = ref(database, `sharedLists/${invitationId}`);\n          const snapshot = await get(invitationRef);\n          const invitationData = snapshot.val();\n          if (invitationData && invitationData.invitedEmail === currentUser.email) {\n            const userEventsRef = ref(database, `users/${currentUser.uid}/events`);\n            const userEventsSnapshot = await get(userEventsRef);\n            const currentUserEvents = userEventsSnapshot.val() || {};\n\n            // Crear un objeto de actualización válido\n            const updateData = {\n              accepted: true,\n              owners: [...invitationData.owners, currentUser.uid]\n            };\n\n            // Añadir los eventos del usuario actual a la lista compartida\n            Object.keys(currentUserEvents).forEach(eventId => {\n              updateData[`events/${currentUser.uid}/${eventId}`] = currentUserEvents[eventId];\n            });\n            await update(invitationRef, updateData);\n            alert('Invitación aceptada');\n          } else {\n            throw new Error('No tienes permiso para aceptar esta invitación');\n          }\n        } catch (error) {\n          console.error('Error al aceptar la invitación:', error);\n          alert('Error al aceptar la invitación. Por favor, intenta de nuevo.');\n        }\n      }\n      closeAlert();\n    });\n  };\n  const leaveSharedList = listId => {\n    showAlert(\"Salir de la lista compartida\", \"¿Estás seguro que quieres salir de esta lista compartida?\", async () => {\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        try {\n          const listRef = ref(database, `sharedLists/${listId}`);\n          const snapshot = await get(listRef);\n          const listData = snapshot.val();\n          if (!listData) {\n            throw new Error('La lista compartida no existe');\n          }\n          if (!listData.owners.includes(currentUser.uid)) {\n            // El usuario no es propietario, pero podría ser un invitado\n            if (listData.invitedEmail === currentUser.email && listData.accepted) {\n              // El usuario es un invitado aceptado, eliminarlo de la lista\n              const updatedOwners = listData.owners.filter(uid => uid !== currentUser.uid);\n              await update(listRef, {\n                owners: updatedOwners,\n                invitedEmail: null,\n                accepted: false\n              });\n              if (listData.events && listData.events[currentUser.uid]) {\n                await remove(ref(database, `sharedLists/${listId}/events/${currentUser.uid}`));\n              }\n              alert('Has sido eliminado de la lista compartida');\n            } else {\n              throw new Error('No tienes permiso para salir de esta lista compartida');\n            }\n          } else {\n            // El usuario es propietario, proceder con la eliminación normal\n            const updatedOwners = listData.owners.filter(uid => uid !== currentUser.uid);\n            if (updatedOwners.length > 0) {\n              await update(listRef, {\n                owners: updatedOwners\n              });\n              if (listData.events && listData.events[currentUser.uid]) {\n                await remove(ref(database, `sharedLists/${listId}/events/${currentUser.uid}`));\n              }\n            } else {\n              await remove(listRef);\n            }\n            alert('Has salido de la lista compartida');\n          }\n        } catch (error) {\n          console.error('Error al salir de la lista compartida:', error);\n          alert(`Error al salir de la lista compartida: ${error.message}`);\n        }\n      } else {\n        alert('Debes estar autenticado para salir de una lista compartida.');\n      }\n      closeAlert();\n    });\n  };\n  const handleViewList = listId => {\n    navigate(`/wishlist/${listId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"Colaborar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invite-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email del colaborador\",\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: inviteCollaborator,\n        className: \"button\",\n        children: \"Enviar Invitaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invitations-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Invitaciones pendientes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), invitations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-invitations\",\n        children: \"No hay invitaciones pendientes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"invitation-list\",\n        children: invitations.map(invitation => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"invitation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Invitaci\\xF3n recibida de: \", invitation.owners[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => acceptInvitation(invitation.id),\n            className: \"button\",\n            children: \"Aceptar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 33\n          }, this)]\n        }, invitation.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shared-lists-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Listas compartidas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), sharedLists.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-shared-lists\",\n        children: \"No hay listas compartidas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"shared-list\",\n        children: sharedLists.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"shared-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shared-list-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"shared-list-title\",\n              children: \"Lista compartida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"shared-list-collaborators\",\n              children: [\"Colaboradores: \", list.ownerNames ? list.ownerNames.filter(name => name !== auth.currentUser.displayName).join(', ') : 'Cargando...']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shared-list-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button view-list-button\",\n              onClick: () => handleViewList(list.id),\n              children: /*#__PURE__*/_jsxDEV(FaEye, {\n                className: \"button-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button leave-list-button\",\n              onClick: () => leaveSharedList(list.id),\n              children: /*#__PURE__*/_jsxDEV(FaSignOutAlt, {\n                className: \"button-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 33\n          }, this)]\n        }, list.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IOSAlert, {\n      isOpen: alertConfig.isOpen,\n      onClose: closeAlert,\n      onConfirm: alertConfig.onConfirm,\n      title: alertConfig.title,\n      message: alertConfig.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n};\n_s(Collaborate, \"h2KAmKTsfSiRXgRcgOvHt7BzHJo=\", false, function () {\n  return [useNavigate];\n});\n_c = Collaborate;\nexport default Collaborate;\nvar _c;\n$RefreshReg$(_c, \"Collaborate\");","map":{"version":3,"names":["React","useState","useEffect","database","auth","ref","push","set","onValue","get","update","remove","IOSAlert","FaEye","FaSignOutAlt","FaCheck","FaTimes","useNavigate","jsxDEV","_jsxDEV","Collaborate","_s","email","setEmail","invitations","setInvitations","sharedLists","setSharedLists","hasWishList","setHasWishList","alertConfig","setAlertConfig","isOpen","title","message","onConfirm","navigate","currentUser","userRef","uid","then","snapshot","exists","val","sharedListsRef","data","invitationList","sharedListArray","Object","entries","forEach","key","value","invitedEmail","accepted","id","owners","includes","Promise","all","map","list","ownerNames","userSnapshot","userData","displayName","error","console","updatedSharedLists","showAlert","closeAlert","inviteCollaborator","userEvents","newListRef","events","alert","acceptInvitation","invitationId","invitationRef","invitationData","userEventsRef","userEventsSnapshot","currentUserEvents","updateData","keys","eventId","Error","leaveSharedList","listId","listRef","listData","updatedOwners","filter","length","handleViewList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","invitation","name","join","onClose","_c","$RefreshReg$"],"sources":["C:/Users/gonch/OneDrive/Desktop/deseosdedos/src/components/Collaborate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { database, auth } from '../services/firebase';\r\nimport { ref, push, set, onValue, get, update, remove } from 'firebase/database';\r\nimport IOSAlert from './IOSAlert';\r\nimport { FaEye, FaSignOutAlt, FaCheck, FaTimes } from 'react-icons/fa';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Collaborate = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [invitations, setInvitations] = useState([]);\r\n    const [sharedLists, setSharedLists] = useState([]);\r\n    const [hasWishList, setHasWishList] = useState(false);\r\n    const [alertConfig, setAlertConfig] = useState({ isOpen: false, title: '', message: '', onConfirm: null });\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            // Verificar si el usuario tiene una lista de deseos\r\n            const userRef = ref(database, `users/${currentUser.uid}/wishlist`);\r\n            get(userRef).then((snapshot) => {\r\n                setHasWishList(snapshot.exists() && snapshot.val() !== null);\r\n            });\r\n\r\n            // Obtener invitaciones y listas compartidas\r\n            const sharedListsRef = ref(database, 'sharedLists');\r\n            onValue(sharedListsRef, (snapshot) => {\r\n                const data = snapshot.val();\r\n                if (data) {\r\n                    const invitationList = [];\r\n                    const sharedListArray = [];\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        if (value.invitedEmail === currentUser.email && !value.accepted) {\r\n                            invitationList.push({ id: key, ...value });\r\n                        } else if (value.owners.includes(currentUser.uid) || (value.invitedEmail === currentUser.email && value.accepted)) {\r\n                            sharedListArray.push({ id: key, ...value });\r\n                        }\r\n                    });\r\n                    setInvitations(invitationList);\r\n\r\n                    // Obtener nombres de usuarios\r\n                    Promise.all(sharedListArray.map(async list => {\r\n                        const ownerNames = await Promise.all(list.owners.map(async uid => {\r\n                            try {\r\n                                const userSnapshot = await get(ref(database, `users/${uid}`));\r\n                                const userData = userSnapshot.val();\r\n                                return userData && userData.displayName ? userData.displayName : (userData && userData.email ? userData.email : uid);\r\n                            } catch (error) {\r\n                                console.error(`Error al obtener el nombre del usuario ${uid}:`, error);\r\n                                return uid;\r\n                            }\r\n                        }));\r\n                        return { ...list, ownerNames };\r\n                    })).then(updatedSharedLists => {\r\n                        setSharedLists(updatedSharedLists);\r\n                    });\r\n                } else {\r\n                    setInvitations([]);\r\n                    setSharedLists([]);\r\n                }\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const showAlert = (title, message, onConfirm) => {\r\n        setAlertConfig({ isOpen: true, title, message, onConfirm });\r\n    };\r\n\r\n    const closeAlert = () => {\r\n        setAlertConfig({ ...alertConfig, isOpen: false });\r\n    };\r\n\r\n    const inviteCollaborator = () => {\r\n        showAlert(\r\n            \"Enviar invitación\",\r\n            `¿Estás seguro que quieres invitar a ${email}?`,\r\n            async () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    try {\r\n                        const userRef = ref(database, `users/${currentUser.uid}/events`);\r\n                        let userEvents = await get(userRef);\r\n                        \r\n                        const newListRef = push(ref(database, 'sharedLists'));\r\n                        await set(newListRef, {\r\n                            owners: [currentUser.uid],\r\n                            invitedEmail: email,\r\n                            accepted: false,\r\n                            events: {\r\n                                [currentUser.uid]: userEvents.val() || {}\r\n                            }\r\n                        });\r\n                        alert('Invitación enviada a ' + email);\r\n                        setEmail('');\r\n                    } catch (error) {\r\n                        console.error('Error al enviar invitación:', error);\r\n                        alert('Error al enviar la invitación. Por favor, intenta de nuevo.');\r\n                    }\r\n                } else {\r\n                    alert('Debes estar autenticado para enviar invitaciones.');\r\n                }\r\n                closeAlert();\r\n            }\r\n        );\r\n    };\r\n\r\n    const acceptInvitation = (invitationId) => {\r\n        showAlert(\r\n            \"Aceptar invitación\",\r\n            \"¿Estás seguro que quieres aceptar esta invitación?\",\r\n            async () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    try {\r\n                        const invitationRef = ref(database, `sharedLists/${invitationId}`);\r\n                        const snapshot = await get(invitationRef);\r\n                        const invitationData = snapshot.val();\r\n                        if (invitationData && invitationData.invitedEmail === currentUser.email) {\r\n                            const userEventsRef = ref(database, `users/${currentUser.uid}/events`);\r\n                            const userEventsSnapshot = await get(userEventsRef);\r\n                            const currentUserEvents = userEventsSnapshot.val() || {};\r\n\r\n                            // Crear un objeto de actualización válido\r\n                            const updateData = {\r\n                                accepted: true,\r\n                                owners: [...invitationData.owners, currentUser.uid]\r\n                            };\r\n\r\n                            // Añadir los eventos del usuario actual a la lista compartida\r\n                            Object.keys(currentUserEvents).forEach(eventId => {\r\n                                updateData[`events/${currentUser.uid}/${eventId}`] = currentUserEvents[eventId];\r\n                            });\r\n\r\n                            await update(invitationRef, updateData);\r\n                            alert('Invitación aceptada');\r\n                        } else {\r\n                            throw new Error('No tienes permiso para aceptar esta invitación');\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error al aceptar la invitación:', error);\r\n                        alert('Error al aceptar la invitación. Por favor, intenta de nuevo.');\r\n                    }\r\n                }\r\n                closeAlert();\r\n            }\r\n        );\r\n    };\r\n\r\n    const leaveSharedList = (listId) => {\r\n        showAlert(\r\n            \"Salir de la lista compartida\",\r\n            \"¿Estás seguro que quieres salir de esta lista compartida?\",\r\n            async () => {\r\n                const currentUser = auth.currentUser;\r\n                if (currentUser) {\r\n                    try {\r\n                        const listRef = ref(database, `sharedLists/${listId}`);\r\n                        const snapshot = await get(listRef);\r\n                        const listData = snapshot.val();\r\n    \r\n                        if (!listData) {\r\n                            throw new Error('La lista compartida no existe');\r\n                        }\r\n    \r\n                        if (!listData.owners.includes(currentUser.uid)) {\r\n                            // El usuario no es propietario, pero podría ser un invitado\r\n                            if (listData.invitedEmail === currentUser.email && listData.accepted) {\r\n                                // El usuario es un invitado aceptado, eliminarlo de la lista\r\n                                const updatedOwners = listData.owners.filter(uid => uid !== currentUser.uid);\r\n                                await update(listRef, {\r\n                                    owners: updatedOwners,\r\n                                    invitedEmail: null,\r\n                                    accepted: false\r\n                                });\r\n                                if (listData.events && listData.events[currentUser.uid]) {\r\n                                    await remove(ref(database, `sharedLists/${listId}/events/${currentUser.uid}`));\r\n                                }\r\n                                alert('Has sido eliminado de la lista compartida');\r\n                            } else {\r\n                                throw new Error('No tienes permiso para salir de esta lista compartida');\r\n                            }\r\n                        } else {\r\n                            // El usuario es propietario, proceder con la eliminación normal\r\n                            const updatedOwners = listData.owners.filter(uid => uid !== currentUser.uid);\r\n                            \r\n                            if (updatedOwners.length > 0) {\r\n                                await update(listRef, {\r\n                                    owners: updatedOwners\r\n                                });\r\n                                if (listData.events && listData.events[currentUser.uid]) {\r\n                                    await remove(ref(database, `sharedLists/${listId}/events/${currentUser.uid}`));\r\n                                }\r\n                            } else {\r\n                                await remove(listRef);\r\n                            }\r\n                            \r\n                            alert('Has salido de la lista compartida');\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Error al salir de la lista compartida:', error);\r\n                        alert(`Error al salir de la lista compartida: ${error.message}`);\r\n                    }\r\n                } else {\r\n                    alert('Debes estar autenticado para salir de una lista compartida.');\r\n                }\r\n                closeAlert();\r\n            }\r\n        );\r\n    };\r\n\r\n    const handleViewList = (listId) => {\r\n        navigate(`/wishlist/${listId}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h2 className=\"page-title\">Colaborar</h2>\r\n            \r\n            {/* Formulario de invitación */}\r\n            <div className=\"invite-form\">\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email del colaborador\"\r\n                    className=\"input\"\r\n                />\r\n                <button onClick={inviteCollaborator} className=\"button\">\r\n                    Enviar Invitación\r\n                </button>\r\n            </div>\r\n\r\n            {/* Sección de invitaciones pendientes */}\r\n            <div className=\"invitations-section\">\r\n                <h3 className=\"section-title\">Invitaciones pendientes:</h3>\r\n                {invitations.length === 0 ? (\r\n                    <p className=\"no-invitations\">No hay invitaciones pendientes.</p>\r\n                ) : (\r\n                    <ul className=\"invitation-list\">\r\n                        {invitations.map((invitation) => (\r\n                            <li key={invitation.id} className=\"invitation-item\">\r\n                                <span>Invitación recibida de: {invitation.owners[0]}</span>\r\n                                <button onClick={() => acceptInvitation(invitation.id)} className=\"button\">\r\n                                    Aceptar\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n\r\n            {/* Sección de listas compartidas */}\r\n            <div className=\"shared-lists-section\">\r\n                <h3 className=\"section-title\">Listas compartidas:</h3>\r\n                {sharedLists.length === 0 ? (\r\n                <p className=\"no-shared-lists\">No hay listas compartidas.</p>\r\n                ) : (\r\n                    <ul className=\"shared-list\">\r\n                        {sharedLists.map((list) => (\r\n                            <li key={list.id} className=\"shared-list-item\">\r\n                                <div className=\"shared-list-info\">\r\n                                    <span className=\"shared-list-title\">Lista compartida</span>\r\n                                    <span className=\"shared-list-collaborators\">\r\n                                        Colaboradores: {list.ownerNames ? list.ownerNames.filter(name => name !== auth.currentUser.displayName).join(', ') : 'Cargando...'}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"shared-list-actions\">\r\n                                    <button className=\"action-button view-list-button\" onClick={() => handleViewList(list.id)}>\r\n                                        <FaEye className=\"button-icon\" />\r\n                                    </button>\r\n                                    <button className=\"action-button leave-list-button\" onClick={() => leaveSharedList(list.id)}>\r\n                                        <FaSignOutAlt className=\"button-icon\" />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n            \r\n            <IOSAlert\r\n                isOpen={alertConfig.isOpen}\r\n                onClose={closeAlert}\r\n                onConfirm={alertConfig.onConfirm}\r\n                title={alertConfig.title}\r\n                message={alertConfig.message}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Collaborate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}