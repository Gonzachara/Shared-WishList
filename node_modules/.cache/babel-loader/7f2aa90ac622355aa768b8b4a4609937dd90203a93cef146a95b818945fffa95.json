{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonch\\\\OneDrive\\\\Desktop\\\\deseosdedos\\\\src\\\\components\\\\Reminders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { database, auth } from '../services/firebase';\nimport { ref, onValue, push, set, remove } from 'firebase/database';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminders = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [newReminder, setNewReminder] = useState({\n    title: '',\n    date: new Date(),\n    completed: false\n  });\n  const [sharedListId, setSharedListId] = useState(null);\n  useEffect(() => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      const sharedListsRef = ref(database, 'sharedLists');\n      const unsubscribe = onValue(sharedListsRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          const sharedList = Object.entries(data).find(([_, value]) => value.accepted && value.owners.includes(currentUser.uid));\n          if (sharedList) {\n            setSharedListId(sharedList[0]);\n            if (sharedList[1].events) {\n              const sharedEvents = Object.entries(sharedList[1].events).flatMap(([uid, events]) => Object.values(events || {}).map(event => ({\n                ...event,\n                owner: uid,\n                id: event.id || Math.random().toString(36).substr(2, 9)\n              })));\n              setEvents(sharedEvents);\n            } else {\n              setEvents([]);\n            }\n          } else {\n            loadPersonalEvents(currentUser.uid);\n          }\n        } else {\n          loadPersonalEvents(currentUser.uid);\n        }\n      });\n      return () => unsubscribe();\n    }\n  }, []);\n  const loadPersonalEvents = userId => {\n    const eventsRef = ref(database, `users/${userId}/events`);\n    onValue(eventsRef, snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        const eventList = Object.values(data);\n        setEvents(eventList);\n      } else {\n        setEvents([]);\n      }\n    });\n  };\n  const addReminder = e => {\n    e.preventDefault();\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      const newEvent = {\n        ...newReminder,\n        id: Math.random().toString(36).substr(2, 9),\n        owner: currentUser.uid,\n        date: newReminder.date.toISOString(),\n        completed: false\n      };\n      const eventRef = sharedListId ? ref(database, `sharedLists/${sharedListId}/events/${currentUser.uid}`) : ref(database, `users/${currentUser.uid}/events`);\n      push(eventRef, newEvent);\n      setNewReminder({\n        title: '',\n        date: new Date(),\n        completed: false\n      });\n    }\n  };\n  const toggleCompleted = event => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      const eventRef = sharedListId ? ref(database, `sharedLists/${sharedListId}/events/${event.owner}/${event.id}`) : ref(database, `users/${currentUser.uid}/events/${event.id}`);\n      set(eventRef, {\n        ...event,\n        completed: !event.completed\n      });\n    }\n  };\n  const deleteReminder = event => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      const eventRef = sharedListId ? ref(database, `sharedLists/${sharedListId}/events/${event.owner}/${event.id}`) : ref(database, `users/${currentUser.uid}/events/${event.id}`);\n      remove(eventRef);\n    }\n  };\n  const sortedEvents = events.sort((a, b) => new Date(a.date) - new Date(b.date));\n  const nextEvents = sortedEvents.filter(event => !event.completed && new Date(event.date) >= new Date());\n  const pastEvents = sortedEvents.filter(event => event.completed || new Date(event.date) < new Date());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ios-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"ios-page-title\",\n      children: \"Recordatorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addReminder,\n      className: \"ios-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newReminder.title,\n        onChange: e => setNewReminder({\n          ...newReminder,\n          title: e.target.value\n        }),\n        placeholder: \"T\\xEDtulo del recordatorio\",\n        className: \"ios-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: newReminder.date,\n        onChange: date => setNewReminder({\n          ...newReminder,\n          date\n        }),\n        dateFormat: \"dd/MM/yyyy\",\n        className: \"ios-datepicker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ios-button\",\n        children: \"Agregar Recordatorio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), nextEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ios-section-title\",\n        children: \"Pr\\xF3ximos Eventos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: nextEvents.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(event.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleCompleted(event),\n              className: \"ios-button-small\",\n              children: event.completed ? 'Desmarcar' : 'Completar'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(event),\n              className: \"ios-button-small ios-button-danger\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), pastEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ios-section-title\",\n        children: \"Eventos Pasados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: pastEvents.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(event.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this), event.completed && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-completed\",\n                children: \"Completado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(event),\n              className: \"ios-button-small ios-button-danger\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(Reminders, \"4+SkLEiqpNJb/tqf25UbJQuCX2s=\");\n_c = Reminders;\nexport default Reminders;\nvar _c;\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"names":["React","useState","useEffect","database","auth","ref","onValue","push","set","remove","DatePicker","jsxDEV","_jsxDEV","Reminders","_s","events","setEvents","newReminder","setNewReminder","title","date","Date","completed","sharedListId","setSharedListId","currentUser","sharedListsRef","unsubscribe","snapshot","data","val","sharedList","Object","entries","find","_","value","accepted","owners","includes","uid","sharedEvents","flatMap","values","map","event","owner","id","Math","random","toString","substr","loadPersonalEvents","userId","eventsRef","eventList","addReminder","e","preventDefault","newEvent","toISOString","eventRef","toggleCompleted","deleteReminder","sortedEvents","sort","a","b","nextEvents","filter","pastEvents","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","placeholder","required","selected","dateFormat","length","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gonch/OneDrive/Desktop/deseosdedos/src/components/Reminders.js"],"sourcesContent":["    import React, { useState, useEffect } from 'react';\r\n    import { database, auth } from '../services/firebase';\r\n    import { ref, onValue, push, set, remove } from 'firebase/database';\r\n    import DatePicker from \"react-datepicker\";\r\n    import \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n    const Reminders = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [newReminder, setNewReminder] = useState({ title: '', date: new Date(), completed: false });\r\n    const [sharedListId, setSharedListId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            const sharedListsRef = ref(database, 'sharedLists');\r\n            const unsubscribe = onValue(sharedListsRef, (snapshot) => {\r\n                const data = snapshot.val();\r\n                if (data) {\r\n                    const sharedList = Object.entries(data).find(([_, value]) => \r\n                        value.accepted && value.owners.includes(currentUser.uid)\r\n                    );\r\n                    if (sharedList) {\r\n                        setSharedListId(sharedList[0]);\r\n                        if (sharedList[1].events) {\r\n                            const sharedEvents = Object.entries(sharedList[1].events).flatMap(([uid, events]) => \r\n                                Object.values(events || {}).map(event => ({\r\n                                    ...event,\r\n                                    owner: uid,\r\n                                    id: event.id || Math.random().toString(36).substr(2, 9)\r\n                                }))\r\n                            );\r\n                            setEvents(sharedEvents);\r\n                        } else {\r\n                            setEvents([]);\r\n                        }\r\n                    } else {\r\n                        loadPersonalEvents(currentUser.uid);\r\n                    }\r\n                } else {\r\n                    loadPersonalEvents(currentUser.uid);\r\n                }\r\n            });\r\n    \r\n            return () => unsubscribe();\r\n        }\r\n    }, []);\r\n    \r\n    const loadPersonalEvents = (userId) => {\r\n        const eventsRef = ref(database, `users/${userId}/events`);\r\n        onValue(eventsRef, (snapshot) => {\r\n            const data = snapshot.val();\r\n            if (data) {\r\n                const eventList = Object.values(data);\r\n                setEvents(eventList);\r\n            } else {\r\n                setEvents([]);\r\n            }\r\n        });\r\n    };\r\n\r\n    const addReminder = (e) => {\r\n        e.preventDefault();\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            const newEvent = {\r\n                ...newReminder,\r\n                id: Math.random().toString(36).substr(2, 9),\r\n                owner: currentUser.uid,\r\n                date: newReminder.date.toISOString(),\r\n                completed: false\r\n            };\r\n            \r\n            const eventRef = sharedListId\r\n                ? ref(database, `sharedLists/${sharedListId}/events/${currentUser.uid}`)\r\n                : ref(database, `users/${currentUser.uid}/events`);\r\n            \r\n            push(eventRef, newEvent);\r\n            setNewReminder({ title: '', date: new Date(), completed: false });\r\n        }\r\n    };\r\n\r\n    const toggleCompleted = (event) => {\r\n    const currentUser = auth.currentUser;\r\n    if (currentUser) {\r\n        const eventRef = sharedListId\r\n            ? ref(database, `sharedLists/${sharedListId}/events/${event.owner}/${event.id}`)\r\n            : ref(database, `users/${currentUser.uid}/events/${event.id}`);\r\n        \r\n        set(eventRef, { ...event, completed: !event.completed });\r\n    }\r\n};\r\n\r\nconst deleteReminder = (event) => {\r\n    const currentUser = auth.currentUser;\r\n    if (currentUser) {\r\n        const eventRef = sharedListId\r\n            ? ref(database, `sharedLists/${sharedListId}/events/${event.owner}/${event.id}`)\r\n            : ref(database, `users/${currentUser.uid}/events/${event.id}`);\r\n        \r\n        remove(eventRef);\r\n    }\r\n};\r\n\r\nconst sortedEvents = events.sort((a, b) => new Date(a.date) - new Date(b.date));\r\nconst nextEvents = sortedEvents.filter(event => !event.completed && new Date(event.date) >= new Date());\r\nconst pastEvents = sortedEvents.filter(event => event.completed || new Date(event.date) < new Date());\r\n    \r\nreturn (\r\n    <div className=\"ios-page\">\r\n        <h2 className=\"ios-page-title\">Recordatorios</h2>\r\n        <form onSubmit={addReminder} className=\"ios-form\">\r\n            <input\r\n                type=\"text\"\r\n                value={newReminder.title}\r\n                onChange={(e) => setNewReminder({...newReminder, title: e.target.value})}\r\n                placeholder=\"Título del recordatorio\"\r\n                className=\"ios-input\"\r\n                required\r\n            />\r\n            <DatePicker\r\n                selected={newReminder.date}\r\n                onChange={(date) => setNewReminder({...newReminder, date})}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                className=\"ios-datepicker\"\r\n            />\r\n            <button type=\"submit\" className=\"ios-button\">Agregar Recordatorio</button>\r\n        </form>\r\n        {nextEvents.length > 0 && (\r\n            <div className=\"ios-section\">\r\n                <h3 className=\"ios-section-title\">Próximos Eventos</h3>\r\n                <ul className=\"ios-list\">\r\n                    {nextEvents.map((event) => (\r\n                        <li key={event.id} className=\"ios-list-item\">\r\n                            <div className=\"ios-list-item-content\">\r\n                                <div className=\"ios-list-item-title\">{event.title}</div>\r\n                                <div className=\"ios-list-item-details\">\r\n                                    <span className=\"ios-list-item-date\">{new Date(event.date).toLocaleDateString()}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"ios-list-item-actions\">\r\n                                <button onClick={() => toggleCompleted(event)} className=\"ios-button-small\">\r\n                                    {event.completed ? 'Desmarcar' : 'Completar'}\r\n                                </button>\r\n                                <button onClick={() => deleteReminder(event)} className=\"ios-button-small ios-button-danger\">\r\n                                    Eliminar\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )}\r\n        {pastEvents.length > 0 && (\r\n            <div className=\"ios-section\">\r\n                <h3 className=\"ios-section-title\">Eventos Pasados</h3>\r\n                <ul className=\"ios-list\">\r\n                    {pastEvents.map((event) => (\r\n                        <li key={event.id} className=\"ios-list-item\">\r\n                            <div className=\"ios-list-item-content\">\r\n                                <div className=\"ios-list-item-title\">{event.title}</div>\r\n                                <div className=\"ios-list-item-details\">\r\n                                    <span className=\"ios-list-item-date\">{new Date(event.date).toLocaleDateString()}</span>\r\n                                    {event.completed && <span className=\"ios-list-item-completed\">Completado</span>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"ios-list-item-actions\">\r\n                                <button onClick={() => deleteReminder(event)} className=\"ios-button-small ios-button-danger\">\r\n                                    Eliminar\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )}\r\n        </div>\r\n    );\r\n    };\r\n\r\n    export default Reminders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}