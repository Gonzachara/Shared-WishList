{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonch\\\\OneDrive\\\\Desktop\\\\deseosdedos\\\\src\\\\components\\\\Reminders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { database, auth } from '../services/firebase';\nimport { ref, onValue, push, set, remove, update } from 'firebase/database';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { FaCheck, FaTimes, FaUndo } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reminders = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [completedEvents, setCompletedEvents] = useState([]);\n  const [deletedEvents, setDeletedEvents] = useState([]);\n  const [newReminder, setNewReminder] = useState({\n    title: '',\n    date: new Date(),\n    completed: false\n  });\n  const [sharedListId, setSharedListId] = useState(null);\n  useEffect(() => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      const sharedListsRef = ref(database, 'sharedLists');\n      const unsubscribe = onValue(sharedListsRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          const sharedList = Object.entries(data).find(([_, value]) => value.accepted && value.owners.includes(currentUser.uid));\n          if (sharedList) {\n            setSharedListId(sharedList[0]);\n            loadSharedEvents(sharedList[0]);\n          } else {\n            loadPersonalEvents(currentUser.uid);\n          }\n        } else {\n          loadPersonalEvents(currentUser.uid);\n        }\n      });\n      return () => unsubscribe();\n    }\n  }, []);\n  const loadPersonalEvents = userId => {\n    const eventsRef = ref(database, `users/${userId}/events`);\n    onValue(eventsRef, snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        const eventList = Object.entries(data).map(([id, event]) => ({\n          ...event,\n          id,\n          owner: userId\n        }));\n        setEvents(eventList.filter(event => !event.completed));\n        setCompletedEvents(eventList.filter(event => event.completed));\n      } else {\n        setEvents([]);\n        setCompletedEvents([]);\n      }\n    });\n  };\n  const loadSharedEvents = listId => {\n    const sharedEventsRef = ref(database, `sharedLists/${listId}/events`);\n    onValue(sharedEventsRef, snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        const eventList = Object.entries(data).flatMap(([ownerId, ownerEvents]) => Object.entries(ownerEvents).map(([id, event]) => ({\n          ...event,\n          id,\n          owner: ownerId\n        })));\n        setEvents(eventList.filter(event => !event.completed));\n        setCompletedEvents(eventList.filter(event => event.completed));\n      } else {\n        setEvents([]);\n        setCompletedEvents([]);\n      }\n    });\n  };\n  const addReminder = e => {\n    e.preventDefault();\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      const newEvent = {\n        ...newReminder,\n        id: Math.random().toString(36).substr(2, 9),\n        owner: currentUser.uid,\n        date: newReminder.date.toISOString(),\n        completed: false\n      };\n      const eventRef = sharedListId ? ref(database, `sharedLists/${sharedListId}/events/${currentUser.uid}`) : ref(database, `users/${currentUser.uid}/events`);\n      push(eventRef, newEvent);\n      setNewReminder({\n        title: '',\n        date: new Date(),\n        completed: false\n      });\n    }\n  };\n  const toggleCompleted = event => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      const eventRef = sharedListId ? ref(database, `sharedLists/${sharedListId}/events/${event.owner}/${event.id}`) : ref(database, `users/${currentUser.uid}/events/${event.id}`);\n      const updatedEvent = {\n        ...event,\n        completed: !event.completed\n      };\n      update(eventRef, updatedEvent);\n    }\n  };\n  const deleteReminder = event => {\n    const currentUser = auth.currentUser;\n    if (currentUser) {\n      const eventRef = sharedListId ? ref(database, `sharedLists/${sharedListId}/events/${event.owner}/${event.id}`) : ref(database, `users/${currentUser.uid}/events/${event.id}`);\n      remove(eventRef);\n    }\n  };\n  const sortedEvents = events.sort((a, b) => new Date(a.date) - new Date(b.date));\n  const nextEvents = sortedEvents.filter(event => !event.completed && new Date(event.date) >= new Date());\n  const pastEvents = sortedEvents.filter(event => !event.completed && new Date(event.date) < new Date());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ios-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"ios-page-title\",\n      children: \"Recordatorios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addReminder,\n      className: \"ios-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newReminder.title,\n        onChange: e => setNewReminder({\n          ...newReminder,\n          title: e.target.value\n        }),\n        placeholder: \"T\\xEDtulo del recordatorio\",\n        className: \"ios-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: newReminder.date,\n        onChange: date => setNewReminder({\n          ...newReminder,\n          date\n        }),\n        dateFormat: \"dd/MM/yyyy\",\n        className: \"ios-datepicker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ios-button\",\n        children: \"Agregar Recordatorio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ios-section-title\",\n        children: \"Pr\\xF3ximos Recordatorios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: nextEvents.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(event.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleCompleted(event),\n              className: \"ios-button-icon ios-button-complete\",\n              \"aria-label\": \"Completar\",\n              children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(event),\n              className: \"ios-button-icon ios-button-delete\",\n              \"aria-label\": \"Eliminar\",\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), pastEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ios-section-title\",\n        children: \"Recordatorios Pasados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: pastEvents.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(event.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleCompleted(event),\n              className: \"ios-button-icon ios-button-complete\",\n              \"aria-label\": \"Completar\",\n              children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(event),\n              className: \"ios-button-icon ios-button-delete\",\n              \"aria-label\": \"Eliminar\",\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 33\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this), completedEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ios-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ios-section-title\",\n        children: \"Recordatorios Completados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ios-list\",\n        children: completedEvents.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ios-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-title\",\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ios-list-item-details\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ios-list-item-date\",\n                children: new Date(event.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ios-list-item-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleCompleted(event),\n              className: \"ios-button-icon ios-button-undo\",\n              \"aria-label\": \"Desmarcar\",\n              children: /*#__PURE__*/_jsxDEV(FaUndo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteReminder(event),\n              className: \"ios-button-icon ios-button-delete\",\n              \"aria-label\": \"Eliminar\",\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 33\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n_s(Reminders, \"Nwxxz8gpsE1xZko0OsQtXGKeMoY=\");\n_c = Reminders;\nexport default Reminders;\nvar _c;\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"names":["React","useState","useEffect","database","auth","ref","onValue","push","set","remove","update","DatePicker","FaCheck","FaTimes","FaUndo","jsxDEV","_jsxDEV","Reminders","_s","events","setEvents","completedEvents","setCompletedEvents","deletedEvents","setDeletedEvents","newReminder","setNewReminder","title","date","Date","completed","sharedListId","setSharedListId","currentUser","sharedListsRef","unsubscribe","snapshot","data","val","sharedList","Object","entries","find","_","value","accepted","owners","includes","uid","loadSharedEvents","loadPersonalEvents","userId","eventsRef","eventList","map","id","event","owner","filter","listId","sharedEventsRef","flatMap","ownerId","ownerEvents","addReminder","e","preventDefault","newEvent","Math","random","toString","substr","toISOString","eventRef","toggleCompleted","updatedEvent","deleteReminder","sortedEvents","sort","a","b","nextEvents","pastEvents","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","placeholder","required","selected","dateFormat","toLocaleDateString","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/gonch/OneDrive/Desktop/deseosdedos/src/components/Reminders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { database, auth } from '../services/firebase';\r\nimport { ref, onValue, push, set, remove, update } from 'firebase/database';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { FaCheck, FaTimes, FaUndo } from 'react-icons/fa';\r\n\r\nconst Reminders = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [completedEvents, setCompletedEvents] = useState([]);\r\n    const [deletedEvents, setDeletedEvents] = useState([]);\r\n    const [newReminder, setNewReminder] = useState({ title: '', date: new Date(), completed: false });\r\n    const [sharedListId, setSharedListId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            const sharedListsRef = ref(database, 'sharedLists');\r\n            const unsubscribe = onValue(sharedListsRef, (snapshot) => {\r\n                const data = snapshot.val();\r\n                if (data) {\r\n                    const sharedList = Object.entries(data).find(([_, value]) => \r\n                        value.accepted && value.owners.includes(currentUser.uid)\r\n                    );\r\n                    if (sharedList) {\r\n                        setSharedListId(sharedList[0]);\r\n                        loadSharedEvents(sharedList[0]);\r\n                    } else {\r\n                        loadPersonalEvents(currentUser.uid);\r\n                    }\r\n                } else {\r\n                    loadPersonalEvents(currentUser.uid);\r\n                }\r\n            });\r\n    \r\n            return () => unsubscribe();\r\n        }\r\n    }, []);\r\n    \r\n    const loadPersonalEvents = (userId) => {\r\n        const eventsRef = ref(database, `users/${userId}/events`);\r\n        onValue(eventsRef, (snapshot) => {\r\n            const data = snapshot.val();\r\n            if (data) {\r\n                const eventList = Object.entries(data).map(([id, event]) => ({\r\n                    ...event,\r\n                    id,\r\n                    owner: userId\r\n                }));\r\n                setEvents(eventList.filter(event => !event.completed));\r\n                setCompletedEvents(eventList.filter(event => event.completed));\r\n            } else {\r\n                setEvents([]);\r\n                setCompletedEvents([]);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadSharedEvents = (listId) => {\r\n        const sharedEventsRef = ref(database, `sharedLists/${listId}/events`);\r\n        onValue(sharedEventsRef, (snapshot) => {\r\n            const data = snapshot.val();\r\n            if (data) {\r\n                const eventList = Object.entries(data).flatMap(([ownerId, ownerEvents]) =>\r\n                    Object.entries(ownerEvents).map(([id, event]) => ({\r\n                        ...event,\r\n                        id,\r\n                        owner: ownerId\r\n                    }))\r\n                );\r\n                setEvents(eventList.filter(event => !event.completed));\r\n                setCompletedEvents(eventList.filter(event => event.completed));\r\n            } else {\r\n                setEvents([]);\r\n                setCompletedEvents([]);\r\n            }\r\n        });\r\n    };\r\n\r\n    const addReminder = (e) => {\r\n        e.preventDefault();\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            const newEvent = {\r\n                ...newReminder,\r\n                id: Math.random().toString(36).substr(2, 9),\r\n                owner: currentUser.uid,\r\n                date: newReminder.date.toISOString(),\r\n                completed: false\r\n            };\r\n            \r\n            const eventRef = sharedListId\r\n                ? ref(database, `sharedLists/${sharedListId}/events/${currentUser.uid}`)\r\n                : ref(database, `users/${currentUser.uid}/events`);\r\n            \r\n            push(eventRef, newEvent);\r\n            setNewReminder({ title: '', date: new Date(), completed: false });\r\n        }\r\n    };\r\n\r\n    const toggleCompleted = (event) => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            const eventRef = sharedListId\r\n                ? ref(database, `sharedLists/${sharedListId}/events/${event.owner}/${event.id}`)\r\n                : ref(database, `users/${currentUser.uid}/events/${event.id}`);\r\n            \r\n            const updatedEvent = { ...event, completed: !event.completed };\r\n            update(eventRef, updatedEvent);\r\n        }\r\n    };\r\n\r\n    const deleteReminder = (event) => {\r\n        const currentUser = auth.currentUser;\r\n        if (currentUser) {\r\n            const eventRef = sharedListId\r\n                ? ref(database, `sharedLists/${sharedListId}/events/${event.owner}/${event.id}`)\r\n                : ref(database, `users/${currentUser.uid}/events/${event.id}`);\r\n            \r\n            remove(eventRef);\r\n        }\r\n    };\r\n\r\n    const sortedEvents = events.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n    const nextEvents = sortedEvents.filter(event => !event.completed && new Date(event.date) >= new Date());\r\n    const pastEvents = sortedEvents.filter(event => !event.completed && new Date(event.date) < new Date());\r\n    \r\n    return (\r\n        <div className=\"ios-page\">\r\n            <h2 className=\"ios-page-title\">Recordatorios</h2>\r\n            <form onSubmit={addReminder} className=\"ios-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newReminder.title}\r\n                    onChange={(e) => setNewReminder({...newReminder, title: e.target.value})}\r\n                    placeholder=\"Título del recordatorio\"\r\n                    className=\"ios-input\"\r\n                    required\r\n                />\r\n                <DatePicker\r\n                    selected={newReminder.date}\r\n                    onChange={(date) => setNewReminder({...newReminder, date})}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    className=\"ios-datepicker\"\r\n                />\r\n                <button type=\"submit\" className=\"ios-button\">Agregar Recordatorio</button>\r\n            </form>\r\n            <div className=\"ios-section\">\r\n                <h3 className=\"ios-section-title\">Próximos Recordatorios</h3>\r\n                <ul className=\"ios-list\">\r\n                    {nextEvents.map((event) => (\r\n                        <li key={event.id} className=\"ios-list-item\">\r\n                            <div className=\"ios-list-item-content\">\r\n                                <div className=\"ios-list-item-title\">{event.title}</div>\r\n                                <div className=\"ios-list-item-details\">\r\n                                    <span className=\"ios-list-item-date\">{new Date(event.date).toLocaleDateString()}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"ios-list-item-actions\">\r\n                                <button onClick={() => toggleCompleted(event)} className=\"ios-button-icon ios-button-complete\" aria-label=\"Completar\">\r\n                                    <FaCheck />\r\n                                </button>\r\n                                <button onClick={() => deleteReminder(event)} className=\"ios-button-icon ios-button-delete\" aria-label=\"Eliminar\">\r\n                                    <FaTimes />\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            {pastEvents.length > 0 && (\r\n                <div className=\"ios-section\">\r\n                    <h3 className=\"ios-section-title\">Recordatorios Pasados</h3>\r\n                    <ul className=\"ios-list\">\r\n                        {pastEvents.map((event) => (\r\n                            <li key={event.id} className=\"ios-list-item\">\r\n                                <div className=\"ios-list-item-content\">\r\n                                    <div className=\"ios-list-item-title\">{event.title}</div>\r\n                                    <div className=\"ios-list-item-details\">\r\n                                        <span className=\"ios-list-item-date\">{new Date(event.date).toLocaleDateString()}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ios-list-item-actions\">\r\n                                    <button onClick={() => toggleCompleted(event)} className=\"ios-button-icon ios-button-complete\" aria-label=\"Completar\">\r\n                                        <FaCheck />\r\n                                    </button>\r\n                                    <button onClick={() => deleteReminder(event)} className=\"ios-button-icon ios-button-delete\" aria-label=\"Eliminar\">\r\n                                        <FaTimes />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n            {completedEvents.length > 0 && (\r\n                <div className=\"ios-section\">\r\n                    <h3 className=\"ios-section-title\">Recordatorios Completados</h3>\r\n                    <ul className=\"ios-list\">\r\n                        {completedEvents.map((event) => (\r\n                            <li key={event.id} className=\"ios-list-item\">\r\n                                <div className=\"ios-list-item-content\">\r\n                                    <div className=\"ios-list-item-title\">{event.title}</div>\r\n                                    <div className=\"ios-list-item-details\">\r\n                                        <span className=\"ios-list-item-date\">{new Date(event.date).toLocaleDateString()}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ios-list-item-actions\">\r\n                                    <button onClick={() => toggleCompleted(event)} className=\"ios-button-icon ios-button-undo\" aria-label=\"Desmarcar\">\r\n                                        <FaUndo />\r\n                                    </button>\r\n                                    <button onClick={() => deleteReminder(event)} className=\"ios-button-icon ios-button-delete\" aria-label=\"Eliminar\">\r\n                                        <FaTimes />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Reminders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}